{"version":3,"sources":["serviceWorker.js","components/GlobalStyles.js","mixins/chartjs.js","theme/index.js","theme/shadows.js","theme/typography.js","components/Logo.js","components/DashboardNavbar.js","components/NavItem.js","components/DashboardSidebar.js","components/DashboardLayout.js","components/MainLayout.js","components/account/AccountProfile.js","components/account/AccountProfileDetails.js","pages/Account.js","components/dashboard/Budget.js","components/dashboard/LatestOrders.js","components/dashboard/LatestProducts.js","components/dashboard/Sales.js","components/dashboard/TasksProgress.js","components/dashboard/TotalCustomers.js","components/dashboard/TotalProfit.js","components/dashboard/TrafficByDevice.js","pages/Dashboard.js","pages/Login.js","pages/NotFound.js","pages/Register.js","actions/index.js","contexts/AppContext.js","utils/common.js","components/additional/prints/Labels.js","components/additional/prints/Previews.js","components/additional/TagLabel.js","pages/TagLabels.js","components/additional/AdditionalList.js","pages/Additional.js","routes.js","reducers/events.js","reducers/additionalData.js","reducers/labelData.js","reducers/choiceLabel.js","reducers/index.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","useStyles","makeStyles","createStyles","boxSizing","margin","padding","html","height","width","body","backgroundColor","a","textDecoration","GlobalStyles","Chart","helpers","extend","elements","Rectangle","prototype","draw","left","right","top","bottom","signX","signY","borderSkipped","radius","ctx","this","_chart","vm","_view","borderWidth","cornerRadius","config","options","horizontal","base","x","y","barSize","Math","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","strokeStyle","borderColor","lineWidth","corners","startCorner","indexOf","cornerAt","index","corner","moveTo","i","nextCornerId","floor","xTl","xTr","yTl","yTr","xBl","xBr","yBl","yBr","lineTo","quadraticCurveTo","fill","stroke","theme","createMuiTheme","palette","background","default","paper","colors","common","white","primary","contrastText","main","text","secondary","shadows","typography","h1","fontWeight","fontSize","letterSpacing","h2","h3","h4","h5","h6","overline","Logo","props","alt","src","root","flexGrow","color","DashboardNavbar","onMobileNavOpen","rest","useState","notifications","classes","console","log","AppBar","elevation","Toolbar","className","to","Box","sx","Hidden","lgDown","IconButton","Badge","badgeContent","length","variant","lgUp","onClick","NavItem","href","Icon","icon","title","useLocation","active","matchPath","path","end","pathname","ListItem","disableGutters","display","py","Button","component","RouterLink","justifyContent","textTransform","mr","size","user","items","TagIcon","BarChartIcon","UserIcon","LockIcon","UserPlusIcon","AlertCircleIcon","DashboardSidebar","onMobileClose","openMobile","useEffect","content","flexDirection","alignItems","p","Avatar","cursor","Typography","Divider","List","map","item","Drawer","anchor","onClose","open","PaperProps","defaultProps","DashboardLayoutRoot","experimentalStyled","overflow","DashboardLayoutWrapper","flex","paddingTop","breakpoints","up","paddingLeft","DashboardLayoutContainer","DashboardLayoutContent","DashboardLayout","isMobileNavOpen","setMobileNavOpen","MainLayoutRoot","MainLayoutWrapper","MainLayoutContainer","MainLayoutContent","MainLayout","AccountProfile","Card","CardContent","gutterBottom","moment","format","CardActions","fullWidth","states","value","label","initialProf","userName","userNameShort","email","phone","section","AccountProfileDetails","values","setValues","handleChange","event","target","name","autoComplete","noValidate","CardHeader","subheader","Grid","container","spacing","md","xs","TextField","helperText","onChange","required","type","select","SelectProps","native","state","option","Account","Helmet","minHeight","Container","maxWidth","lg","Budget","red","pt","orders","id","uuid","ref","amount","customer","createdAt","status","LatestOrders","minWidth","Table","TableHead","TableRow","TableCell","sortDirection","Tooltip","enterDelay","TableSortLabel","direction","TableBody","order","hover","Chip","endIcon","products","imageUrl","updatedAt","subtract","LatestProducts","subtitle","product","divider","ListItemAvatar","style","ListItemText","fromNow","edge","Sales","useTheme","data","datasets","indigo","grey","labels","animation","layout","legend","maintainAspectRatio","responsive","scales","xAxes","barThickness","maxBarThickness","barPercentage","categoryPercentage","ticks","fontColor","gridLines","drawBorder","yAxes","beginAtZero","borderDash","borderDashOffset","zeroLineBorderDash","zeroLineBorderDashOffset","zeroLineColor","tooltips","bodyFontColor","enabled","footerFontColor","intersect","mode","titleFontColor","action","position","TasksProgress","orange","LinearProgress","TotalCustomers","green","TotalProfit","TrafficByDevice","hoverBorderColor","cutoutPercentage","devices","LaptopMacIcon","TabletIcon","PhoneIcon","textAlign","Dashboard","sm","xl","Login","navigate","useNavigate","setEmployee","setPassword","initialValues","employee","password","validationSchema","Yup","shape","max","onSubmit","replace","errors","handleSubmit","isSubmitting","touched","mb","error","e","disabled","Link","NotFound","align","marginTop","Register","passwordConfirmation","policy","oneOf","handleBlur","onBlur","ADD_EVENT_LOG","DELETE_ADDITIONAL_ORDER","ADDITIONAL_ORDER_FETCH","PRINT_TAG_DONE","LABEL_LOADING","LABEL_DELETE","CHOICE_CID","AppContext","createContext","tagColor","color_number","back_color","Labels","divStyle","componentRef","React","createRef","partNo","parts_no","qrcode","cid","slice","cust_name","dod","order_cd","tei_name","product_name","qty","total_qty","address","tag_number","Component","Previews","tagInfo","axios","get","then","response","setState","val","TagLabel","dispatch","useContext","confirm","operatedAt","Date","PrintLabel","qty_total","TagLabels","choiceLabel","order_no","labelData","Fragment","idx","Transition","forwardRef","Slide","Delete","useRef","setOpen","dialogClose","Dialog","TransitionComponent","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Preview","trigger","current","AdditionalList","parse","due_date","cate","is_iron","is_invoice","vehicle_type","is_urgent","time_designation","cate_number_of_outputs","colSpan","d","post","delete","param","res","put","maker_short_name","custname","place","tag_print_done","Additional","fetch_order","additionalData","intervalId","setInterval","clearInterval","routes","element","children","events","eventLog","filter","combineReducers","APP_KEY","App","routing","useRoutes","appState","localStorage","getItem","initialState","JSON","targetLabel","useReducer","reducer","setItem","stringify","Provider","ThemeProvider","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5d052979.chunk.js","sourcesContent":["/* eslint-disable */\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { createStyles, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => createStyles({\r\n  '@global': {\r\n    '*': {\r\n      boxSizing: 'border-box',\r\n      margin: 0,\r\n      padding: 0,\r\n    },\r\n    html: {\r\n      '-webkit-font-smoothing': 'antialiased',\r\n      '-moz-osx-font-smoothing': 'grayscale',\r\n      height: '100%',\r\n      width: '100%'\r\n    },\r\n    body: {\r\n      backgroundColor: '#f4f6f8',\r\n      height: '100%',\r\n      width: '100%'\r\n    },\r\n    a: {\r\n      textDecoration: 'none'\r\n    },\r\n    '#root': {\r\n      height: '100%',\r\n      width: '100%'\r\n    }\r\n  }\r\n}));\r\n\r\nconst GlobalStyles = () => {\r\n  useStyles();\r\n\r\n  return null;\r\n};\r\n\r\nexport default GlobalStyles;\r\n","/* eslint-disable no-underscore-dangle */\r\nimport { Chart } from 'react-chartjs-2';\r\n\r\n// ChartJS extension rounded bar chart\r\n// https://codepen.io/jedtrow/full/ygRYgo\r\nfunction draw() {\r\n  const { ctx } = this._chart;\r\n  const vm = this._view;\r\n  let { borderWidth } = vm;\r\n\r\n  let left;\r\n  let right;\r\n  let top;\r\n  let bottom;\r\n  let signX;\r\n  let signY;\r\n  let borderSkipped;\r\n  let radius;\r\n\r\n  // If radius is less than 0 or is large enough to cause drawing errors a max\r\n  //      radius is imposed. If cornerRadius is not defined set it to 0.\r\n  let { cornerRadius } = this._chart.config.options;\r\n  if (cornerRadius < 0) {\r\n    cornerRadius = 0;\r\n  }\r\n\r\n  if (typeof cornerRadius === 'undefined') {\r\n    cornerRadius = 0;\r\n  }\r\n\r\n  if (!vm.horizontal) {\r\n    // bar\r\n    left = vm.x - vm.width / 2;\r\n    right = vm.x + vm.width / 2;\r\n    top = vm.y;\r\n    bottom = vm.base;\r\n    signX = 1;\r\n    signY = bottom > top ? 1 : -1;\r\n    borderSkipped = vm.borderSkipped || 'bottom';\r\n  } else {\r\n    // horizontal bar\r\n    left = vm.base;\r\n    right = vm.x;\r\n    top = vm.y - vm.height / 2;\r\n    bottom = vm.y + vm.height / 2;\r\n    signX = right > left ? 1 : -1;\r\n    signY = 1;\r\n    borderSkipped = vm.borderSkipped || 'left';\r\n  }\r\n\r\n  // Canvas doesn't allow us to stroke inside the width so we can\r\n  // adjust the sizes to fit if we're setting a stroke on the line\r\n  if (borderWidth) {\r\n    // borderWidth shold be less than bar width and bar height.\r\n    const barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\r\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\r\n    const halfStroke = borderWidth / 2;\r\n    // Adjust borderWidth when bar top position is near vm.base(zero).\r\n    const borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\r\n    const borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\r\n    const borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\r\n    const borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\r\n    // not become a vertical line?\r\n    if (borderLeft !== borderRight) {\r\n      top = borderTop;\r\n      bottom = borderBottom;\r\n    }\r\n    // not become a horizontal line?\r\n    if (borderTop !== borderBottom) {\r\n      left = borderLeft;\r\n      right = borderRight;\r\n    }\r\n  }\r\n\r\n  ctx.beginPath();\r\n  ctx.fillStyle = vm.backgroundColor;\r\n  ctx.strokeStyle = vm.borderColor;\r\n  ctx.lineWidth = borderWidth;\r\n\r\n  // Corner points, from bottom-left to bottom-right clockwise\r\n  // | 1 2 |\r\n  // | 0 3 |\r\n  const corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\r\n\r\n  // Find first (starting) corner with fallback to 'bottom'\r\n  const borders = ['bottom', 'left', 'top', 'right'];\r\n  let startCorner = borders.indexOf(borderSkipped, 0);\r\n  if (startCorner === -1) {\r\n    startCorner = 0;\r\n  }\r\n\r\n  function cornerAt(index) {\r\n    return corners[(startCorner + index) % 4];\r\n  }\r\n\r\n  // Draw rectangle from 'startCorner'\r\n  let corner = cornerAt(0);\r\n  ctx.moveTo(corner[0], corner[1]);\r\n\r\n  for (let i = 1; i < 4; i += 1) {\r\n    corner = cornerAt(i);\r\n    let nextCornerId = i + 1;\r\n    if (nextCornerId === 4) {\r\n      nextCornerId = 0;\r\n    }\r\n\r\n    const width = corners[2][0] - corners[1][0];\r\n    const height = corners[0][1] - corners[1][1];\r\n    const x = corners[1][0];\r\n    const y = corners[1][1];\r\n\r\n    radius = cornerRadius;\r\n    // Fix radius being too large\r\n    if (radius > Math.abs(height) / 2) {\r\n      radius = Math.floor(Math.abs(height) / 2);\r\n    }\r\n    if (radius > Math.abs(width) / 2) {\r\n      radius = Math.floor(Math.abs(width) / 2);\r\n    }\r\n\r\n    if (height < 0) {\r\n      // Negative values in a standard bar chart\r\n      const xTl = x;\r\n      const xTr = x + width;\r\n      const yTl = y + height;\r\n      const yTr = y + height;\r\n\r\n      const xBl = x;\r\n      const xBr = x + width;\r\n      const yBl = y;\r\n      const yBr = y;\r\n\r\n      // Draw\r\n      ctx.moveTo(xBl + radius, yBl);\r\n      ctx.lineTo(xBr - radius, yBr);\r\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\r\n      ctx.lineTo(xTr, yTr + radius);\r\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\r\n      ctx.lineTo(xTl + radius, yTl);\r\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\r\n      ctx.lineTo(xBl, yBl - radius);\r\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\r\n    } else if (width < 0) {\r\n      // Negative values in a horizontal bar chart\r\n      const xTl = x + width;\r\n      const xTr = x;\r\n      const yTl = y;\r\n      const yTr = y;\r\n\r\n      const xBl = x + width;\r\n      const xBr = x;\r\n      const yBl = y + height;\r\n      const yBr = y + height;\r\n\r\n      // Draw\r\n      ctx.moveTo(xBl + radius, yBl);\r\n      ctx.lineTo(xBr - radius, yBr);\r\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\r\n      ctx.lineTo(xTr, yTr + radius);\r\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\r\n      ctx.lineTo(xTl + radius, yTl);\r\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\r\n      ctx.lineTo(xBl, yBl - radius);\r\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\r\n    } else {\r\n      // Positive Value\r\n      ctx.moveTo(x + radius, y);\r\n      ctx.lineTo(x + width - radius, y);\r\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n      ctx.lineTo(x + width, y + height - radius);\r\n      ctx.quadraticCurveTo(\r\n        x + width,\r\n        y + height,\r\n        x + width - radius,\r\n        y + height\r\n      );\r\n      ctx.lineTo(x + radius, y + height);\r\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n      ctx.lineTo(x, y + radius);\r\n      ctx.quadraticCurveTo(x, y, x + radius, y);\r\n    }\r\n  }\r\n\r\n  ctx.fill();\r\n  if (borderWidth) {\r\n    ctx.stroke();\r\n  }\r\n}\r\n\r\nChart.helpers.extend(Chart.elements.Rectangle.prototype, {\r\n  draw\r\n});\r\n","import { createMuiTheme, colors } from '@material-ui/core';\r\nimport shadows from './shadows';\r\nimport typography from './typography';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    background: {\r\n      default: '#F4F6F8',\r\n      paper: colors.common.white\r\n    },\r\n    primary: {\r\n      contrastText: '#ffffff',\r\n      main: '#5664d2'\r\n    },\r\n    text: {\r\n      primary: '#172b4d',\r\n      secondary: '#6b778c'\r\n    }\r\n  },\r\n  shadows,\r\n  typography\r\n});\r\n\r\nexport default theme;\r\n","export default [\r\n  'none',\r\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\r\n];\r\n","export default {\r\n  h1: {\r\n    fontWeight: 500,\r\n    fontSize: 35,\r\n    letterSpacing: '-0.24px'\r\n  },\r\n  h2: {\r\n    fontWeight: 500,\r\n    fontSize: 29,\r\n    letterSpacing: '-0.24px'\r\n  },\r\n  h3: {\r\n    fontWeight: 500,\r\n    fontSize: 24,\r\n    letterSpacing: '-0.06px'\r\n  },\r\n  h4: {\r\n    fontWeight: 500,\r\n    fontSize: 20,\r\n    letterSpacing: '-0.06px'\r\n  },\r\n  h5: {\r\n    fontWeight: 500,\r\n    fontSize: 16,\r\n    letterSpacing: '-0.05px'\r\n  },\r\n  h6: {\r\n    fontWeight: 500,\r\n    fontSize: 14,\r\n    letterSpacing: '-0.05px'\r\n  },\r\n  overline: {\r\n    fontWeight: 500\r\n  }\r\n};\r\n","const Logo = (props) => (\r\n  <img\r\n    alt=\"Logo\"\r\n    src=\"/static/logo.svg\"\r\n    {...props}\r\n  />\r\n);\r\n\r\nexport default Logo;\r\n","import { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom'; // material-ui Link \r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  AppBar,\r\n  Badge,\r\n  Box,\r\n  Hidden,\r\n  IconButton,\r\n  Toolbar\r\n} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\r\nimport InputIcon from '@material-ui/icons/Input';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Logo from './Logo';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n    color: \"#FFF\",\r\n    backgroundColor: \"#5F9EA0\"\r\n  }\r\n})\r\n\r\n\r\nconst DashboardNavbar = ({ onMobileNavOpen, ...rest }) => {\r\n  const [notifications] = useState([]);\r\n  const classes = useStyles()\r\n\r\n  console.log(rest)\r\n  return (\r\n    <AppBar\r\n      elevation={0}\r\n      {...rest}\r\n    >\r\n      <Toolbar className={classes.root}>\r\n        <RouterLink to=\"/\">\r\n          <Logo />\r\n        </RouterLink>\r\n        <Box sx={{ flexGrow: 1 }} />\r\n        <Hidden lgDown>\r\n          <IconButton color=\"inherit\">\r\n            <Badge\r\n              badgeContent={notifications.length}\r\n              color=\"primary\"\r\n              variant=\"dot\"\r\n            >\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n          <IconButton color=\"inherit\">\r\n            <RouterLink to=\"/login\">\r\n              <InputIcon />\r\n            </RouterLink>\r\n          </IconButton>\r\n        </Hidden>\r\n        <Hidden lgUp>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            onClick={onMobileNavOpen}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n        </Hidden>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nDashboardNavbar.propTypes = {\r\n  onMobileNavOpen: PropTypes.func\r\n};\r\n\r\nexport default DashboardNavbar;\r\n","import {\r\n  NavLink as RouterLink,\r\n  matchPath,\r\n  useLocation\r\n} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, ListItem } from '@material-ui/core';\r\n\r\nconst NavItem = ({\r\n  href,\r\n  icon: Icon,\r\n  title,\r\n  ...rest\r\n}) => {\r\n  const location = useLocation();\r\n\r\n  const active = href ? !!matchPath({\r\n    path: href,\r\n    end: false\r\n  }, location.pathname) : false;\r\n\r\n  return (\r\n    <ListItem\r\n      disableGutters\r\n      sx={{\r\n        display: 'flex',\r\n        py: 0\r\n      }}\r\n      {...rest}\r\n    >\r\n      <Button\r\n        component={RouterLink}\r\n        sx={{\r\n          color: 'text.secondary',\r\n          fontWeight: 'medium',\r\n          justifyContent: 'flex-start',\r\n          letterSpacing: 0,\r\n          py: 1.25,\r\n          textTransform: 'none',\r\n          width: '100%',\r\n          ...(active && {\r\n            color: 'primary.main'\r\n          }),\r\n          '& svg': {\r\n            mr: 1\r\n          }\r\n        }}\r\n        to={href}\r\n      >\r\n        {Icon && (\r\n          <Icon size=\"20\" />\r\n        )}\r\n        <span>\r\n          {title}\r\n        </span>\r\n      </Button>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nNavItem.propTypes = {\r\n  href: PropTypes.string,\r\n  icon: PropTypes.elementType,\r\n  title: PropTypes.string\r\n};\r\n\r\nexport default NavItem;\r\n","import { useEffect } from 'react';\r\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  // Button,\r\n  Divider,\r\n  Drawer,\r\n  Hidden,\r\n  List,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport {\r\n  AlertCircle as AlertCircleIcon,\r\n  BarChart as BarChartIcon,\r\n  Lock as LockIcon,\r\n  // Settings as SettingsIcon,\r\n  // ShoppingBag as ShoppingBagIcon,\r\n  User as UserIcon,\r\n  UserPlus as UserPlusIcon,\r\n  // Users as UsersIcon,\r\n  Tag as TagIcon\r\n} from 'react-feather';\r\nimport NavItem from './NavItem';\r\n\r\nconst user = {\r\n  avatar: '/static/images/avatars/main.png',\r\n  jobTitle: '製造部',\r\n  name: '潮田 正人'\r\n};\r\n\r\nconst items = [\r\n  {\r\n    href: '/additional',\r\n    icon: TagIcon,\r\n    title: '追加依頼'\r\n  },\r\n  {\r\n    href: '/app/dashboard',\r\n    icon: BarChartIcon,\r\n    title: 'ダッシュボード'\r\n  },\r\n  // {\r\n  //   href: '/app/customers',\r\n  //   icon: UsersIcon,\r\n  //   title: 'Customers'\r\n  // },\r\n  // {\r\n  //   href: '/app/products',\r\n  //   icon: ShoppingBagIcon,\r\n  //   title: 'Products'\r\n  // },\r\n  {\r\n    href: '/app/account',\r\n    icon: UserIcon,\r\n    title: 'アカウント'\r\n  },\r\n  // {\r\n  //   href: '/app/settings',\r\n  //   icon: SettingsIcon,\r\n  //   title: 'Settings'\r\n  // },\r\n  {\r\n    href: '/login',\r\n    icon: LockIcon,\r\n    title: 'ログイン'\r\n  },\r\n  {\r\n    href: '/register',\r\n    icon: UserPlusIcon,\r\n    title: 'アカウント登録'\r\n  },\r\n  {\r\n    href: '/404',\r\n    icon: AlertCircleIcon,\r\n    title: 'Error'\r\n  }\r\n];\r\n\r\nconst DashboardSidebar = ({ onMobileClose, openMobile }) => {\r\n  const location = useLocation();\r\n\r\n  // useEffect(() => {\r\n  //   if (openMobile && onMobileClose) {\r\n  //     onMobileClose();\r\n  //   }\r\n  // }, [location.pathname]);\r\n\r\n  useEffect(() => {\r\n    if (openMobile && onMobileClose) {\r\n      onMobileClose();\r\n    }\r\n  }, []);\r\n\r\n  const content = (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        height: '100%'\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          alignItems: 'center',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          p: 2\r\n        }}\r\n      >\r\n        <Avatar\r\n          component={RouterLink}\r\n          src={user.avatar}\r\n          sx={{\r\n            cursor: 'pointer',\r\n            width: 64,\r\n            height: 64\r\n          }}\r\n          to=\"/app/account\"\r\n        />\r\n        <Typography\r\n          color=\"textPrimary\"\r\n          variant=\"h5\"\r\n        >\r\n          {user.name}\r\n        </Typography>\r\n        <Typography\r\n          color=\"textSecondary\"\r\n          variant=\"body2\"\r\n        >\r\n          {user.jobTitle}\r\n        </Typography>\r\n      </Box>\r\n      <Divider />\r\n      <Box sx={{ p: 2 }}>\r\n        <List>\r\n          {items.map((item) => (\r\n            <NavItem\r\n              href={item.href}\r\n              key={item.title}\r\n              title={item.title}\r\n              icon={item.icon}\r\n            />\r\n          ))}\r\n        </List>\r\n      </Box>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Hidden lgUp>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          onClose={onMobileClose}\r\n          open={openMobile}\r\n          variant=\"temporary\"\r\n          PaperProps={{\r\n            sx: {\r\n              width: 256\r\n            }\r\n          }}\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden lgDown>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          open\r\n          variant=\"persistent\"\r\n          PaperProps={{\r\n            sx: {\r\n              width: 256,\r\n              top: 64,\r\n              height: 'calc(100% - 64px)'\r\n            }\r\n          }}\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n    </>\r\n  );\r\n};\r\n\r\nDashboardSidebar.propTypes = {\r\n  onMobileClose: PropTypes.func,\r\n  openMobile: PropTypes.bool\r\n};\r\n\r\nDashboardSidebar.defaultProps = {\r\n  onMobileClose: () => { },\r\n  openMobile: false\r\n};\r\n\r\nexport default DashboardSidebar;\r\n","import { useState } from 'react';\r\nimport { Outlet } from 'react-router-dom';\r\nimport { experimentalStyled } from '@material-ui/core';\r\nimport DashboardNavbar from './DashboardNavbar';\r\nimport DashboardSidebar from './DashboardSidebar';\r\n\r\nconst DashboardLayoutRoot = experimentalStyled('div')(\r\n  ({ theme }) => ({\r\n    backgroundColor: theme.palette.background.default,\r\n    display: 'flex',\r\n    height: '100%',\r\n    overflow: 'hidden',\r\n    width: '100%'\r\n  })\r\n);\r\n\r\nconst DashboardLayoutWrapper = experimentalStyled('div')(\r\n  ({ theme }) => ({\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden',\r\n    paddingTop: 64,\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingLeft: 256\r\n    }\r\n  })\r\n);\r\n\r\nconst DashboardLayoutContainer = experimentalStyled('div')({\r\n  display: 'flex',\r\n  flex: '1 1 auto',\r\n  overflow: 'hidden'\r\n});\r\n\r\nconst DashboardLayoutContent = experimentalStyled('div')({\r\n  flex: '1 1 auto',\r\n  height: '100%',\r\n  overflow: 'auto'\r\n});\r\n\r\nconst DashboardLayout = () => {\r\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\r\n\r\n  return (\r\n    <DashboardLayoutRoot>\r\n      <DashboardNavbar onMobileNavOpen={() => setMobileNavOpen(true)} />\r\n      <DashboardSidebar\r\n        onMobileClose={() => setMobileNavOpen(false)}\r\n        openMobile={isMobileNavOpen}\r\n      />\r\n      <DashboardLayoutWrapper>\r\n        <DashboardLayoutContainer>\r\n          <DashboardLayoutContent>\r\n            <Outlet />\r\n          </DashboardLayoutContent>\r\n        </DashboardLayoutContainer>\r\n      </DashboardLayoutWrapper>\r\n    </DashboardLayoutRoot>\r\n  );\r\n};\r\n\r\nexport default DashboardLayout;\r\n","import { Outlet } from 'react-router-dom';\r\nimport { experimentalStyled } from '@material-ui/core';\r\n// import MainNavbar from './MainNavbar';\r\nimport DashboardNavbar from './DashboardNavbar'\r\n\r\nconst MainLayoutRoot = experimentalStyled('div')(\r\n  ({ theme }) => ({\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: 'flex',\r\n    height: '100%',\r\n    overflow: 'hidden',\r\n    width: '100%'\r\n  })\r\n);\r\n\r\nconst MainLayoutWrapper = experimentalStyled('div')({\r\n  display: 'flex',\r\n  flex: '1 1 auto',\r\n  overflow: 'hidden',\r\n  paddingTop: 64\r\n});\r\n\r\nconst MainLayoutContainer = experimentalStyled('div')({\r\n  display: 'flex',\r\n  flex: '1 1 auto',\r\n  overflow: 'hidden'\r\n});\r\n\r\nconst MainLayoutContent = experimentalStyled('div')({\r\n  flex: '1 1 auto',\r\n  height: '100%',\r\n  overflow: 'auto'\r\n});\r\n\r\nconst MainLayout = () => (\r\n  <MainLayoutRoot>\r\n    <DashboardNavbar props={[\"test\", \"test2\"]} />\r\n    <MainLayoutWrapper>\r\n      <MainLayoutContainer>\r\n        <MainLayoutContent>\r\n          <Outlet />\r\n        </MainLayoutContent>\r\n      </MainLayoutContainer>\r\n    </MainLayoutWrapper>\r\n  </MainLayoutRoot>\r\n);\r\n\r\nexport default MainLayout;\r\n","import moment from 'moment';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Divider,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nconst user = {\r\n  avatar: '/static/images/avatars/main.png',\r\n  city: 'つくばし',\r\n  country: '日本',\r\n  jobTitle: '製造部',\r\n  name: '潮田 正人',\r\n  timezone: 'GTM-7'\r\n};\r\n\r\nconst AccountProfile = (props) => (\r\n  <Card {...props}>\r\n    <CardContent>\r\n      <Box\r\n        sx={{\r\n          alignItems: 'center',\r\n          display: 'flex',\r\n          flexDirection: 'column'\r\n        }}\r\n      >\r\n        <Avatar\r\n          src={user.avatar}\r\n          sx={{\r\n            height: 100,\r\n            width: 100\r\n          }}\r\n        />\r\n        <Typography\r\n          color=\"textPrimary\"\r\n          gutterBottom\r\n          variant=\"h3\"\r\n        >\r\n          {user.name}\r\n        </Typography>\r\n        <Typography\r\n          color=\"textSecondary\"\r\n          variant=\"body1\"\r\n        >\r\n          {`${user.city} ${user.country}`}\r\n        </Typography>\r\n        <Typography\r\n          color=\"textSecondary\"\r\n          variant=\"body1\"\r\n        >\r\n          {`${moment().format('hh:mm A')} ${user.timezone}`}\r\n        </Typography>\r\n      </Box>\r\n    </CardContent>\r\n    <Divider />\r\n    <CardActions>\r\n      <Button\r\n        color=\"primary\"\r\n        fullWidth\r\n        variant=\"text\"\r\n      >\r\n        プロフィール画像変更\r\n      </Button>\r\n    </CardActions>\r\n  </Card>\r\n);\r\n\r\nexport default AccountProfile;\r\n","import { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Grid,\r\n  TextField\r\n} from '@material-ui/core';\r\n\r\nconst states = [\r\n  {\r\n    value: '100',\r\n    label: '茨城工場'\r\n  },\r\n  {\r\n    value: '600',\r\n    label: '本社'\r\n  },\r\n  {\r\n    value: '150',\r\n    label: '東北工場'\r\n  }\r\n];\r\n\r\nconst initialProf = {\r\n  userName: '潮田 正人',\r\n  userNameShort: '潮田',\r\n  email: 'ushioda.m@i-makes.com',\r\n  phone: '112233',\r\n  base: '茨城工場',\r\n  section: '製造部'\r\n}\r\nconst AccountProfileDetails = (props) => {\r\n  const [values, setValues] = useState(initialProf);\r\n\r\n  const handleChange = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form\r\n      autoComplete=\"off\"\r\n      noValidate\r\n      {...props}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n          subheader=\"プロフィールの変更\"\r\n          title=\"ユーザ情報\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                helperText=\"Please specify the first name\"\r\n                label=\"名前\"\r\n                name=\"userName\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.userName}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"短縮名\"\r\n                name=\"userNameShort\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.userNameShort}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"メールアドレス\"\r\n                name=\"email\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.email}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"携帯電話番号\"\r\n                name=\"phone\"\r\n                onChange={handleChange}\r\n                type=\"number\"\r\n                value={values.phone}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"部署名\"\r\n                name=\"section\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.section}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"拠点名\"\r\n                name=\"base\"\r\n                onChange={handleChange}\r\n                required\r\n                select\r\n                SelectProps={{ native: true }}\r\n                value={values.state}\r\n                variant=\"outlined\"\r\n              >\r\n                {states.map((option) => (\r\n                  <option\r\n                    key={option.value}\r\n                    value={option.value}\r\n                  >\r\n                    {option.label}\r\n                  </option>\r\n                ))}\r\n              </TextField>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            justifyContent: 'flex-end',\r\n            p: 2\r\n          }}\r\n        >\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            登録\r\n          </Button>\r\n        </Box>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AccountProfileDetails;\r\n","import { Helmet } from 'react-helmet';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Grid\r\n} from '@material-ui/core';\r\nimport AccountProfile from 'src/components/account/AccountProfile';\r\nimport AccountProfileDetails from 'src/components/account/AccountProfileDetails';\r\n\r\nconst Account = () => (\r\n  <>\r\n    <Helmet>\r\n      <title>Account | 生産管理 </title>\r\n    </Helmet>\r\n    <Box\r\n      sx={{\r\n        backgroundColor: 'background.default',\r\n        minHeight: '100%',\r\n        py: 3\r\n      }}\r\n    >\r\n      <Container maxWidth=\"lg\">\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n        >\r\n          <Grid\r\n            item\r\n            lg={4}\r\n            md={6}\r\n            xs={12}\r\n          >\r\n            <AccountProfile />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={8}\r\n            md={6}\r\n            xs={12}\r\n          >\r\n            <AccountProfileDetails />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  </>\r\n);\r\n\r\nexport default Account;\r\n","import {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport MoneyIcon from '@material-ui/icons/Money';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst Budget = (props) => (\r\n  <Card\r\n    sx={{ height: '100%' }}\r\n    {...props}\r\n  >\r\n    <CardContent>\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        sx={{ justifyContent: 'space-between' }}\r\n      >\r\n        <Grid item>\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            gutterBottom\r\n            variant=\"h6\"\r\n          >\r\n            BUDGET\r\n          </Typography>\r\n          <Typography\r\n            color=\"textPrimary\"\r\n            variant=\"h3\"\r\n          >\r\n            $24,000\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Avatar\r\n            sx={{\r\n              backgroundColor: red[600],\r\n              height: 56,\r\n              width: 56\r\n            }}\r\n          >\r\n            <MoneyIcon />\r\n          </Avatar>\r\n        </Grid>\r\n      </Grid>\r\n      <Box\r\n        sx={{\r\n          pt: 2,\r\n          display: 'flex',\r\n          alignItems: 'center'\r\n        }}\r\n      >\r\n        <ArrowDownwardIcon sx={{ color: red[900] }} />\r\n        <Typography\r\n          sx={{\r\n            color: red[900],\r\n            mr: 1\r\n          }}\r\n          variant=\"body2\"\r\n        >\r\n          12%\r\n        </Typography>\r\n        <Typography\r\n          color=\"textSecondary\"\r\n          variant=\"caption\"\r\n        >\r\n          Since last month\r\n        </Typography>\r\n      </Box>\r\n    </CardContent>\r\n  </Card>\r\n);\r\n\r\nexport default Budget;\r\n","import moment from 'moment';\r\nimport { v4 as uuid } from 'uuid';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  Chip,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TableSortLabel,\r\n  Tooltip\r\n} from '@material-ui/core';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\n\r\nconst orders = [\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1049',\r\n    amount: 30.5,\r\n    customer: {\r\n      name: 'Ekaterina Tankova'\r\n    },\r\n    createdAt: 1555016400000,\r\n    status: 'pending'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1048',\r\n    amount: 25.1,\r\n    customer: {\r\n      name: 'Cao Yu'\r\n    },\r\n    createdAt: 1555016400000,\r\n    status: 'delivered'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1047',\r\n    amount: 10.99,\r\n    customer: {\r\n      name: 'Alexa Richardson'\r\n    },\r\n    createdAt: 1554930000000,\r\n    status: 'refunded'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1046',\r\n    amount: 96.43,\r\n    customer: {\r\n      name: 'Anje Keizer'\r\n    },\r\n    createdAt: 1554757200000,\r\n    status: 'pending'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1045',\r\n    amount: 32.54,\r\n    customer: {\r\n      name: 'Clarke Gillebert'\r\n    },\r\n    createdAt: 1554670800000,\r\n    status: 'delivered'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1044',\r\n    amount: 16.76,\r\n    customer: {\r\n      name: 'Adam Denisov'\r\n    },\r\n    createdAt: 1554670800000,\r\n    status: 'delivered'\r\n  }\r\n];\r\n\r\nconst LatestOrders = (props) => (\r\n  <Card {...props}>\r\n    <CardHeader title=\"Latest Orders\" />\r\n    <Divider />\r\n    <PerfectScrollbar>\r\n      <Box sx={{ minWidth: 800 }}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                Order Ref\r\n              </TableCell>\r\n              <TableCell>\r\n                Customer\r\n              </TableCell>\r\n              <TableCell sortDirection=\"desc\">\r\n                <Tooltip\r\n                  enterDelay={300}\r\n                  title=\"Sort\"\r\n                >\r\n                  <TableSortLabel\r\n                    active\r\n                    direction=\"desc\"\r\n                  >\r\n                    Date\r\n                  </TableSortLabel>\r\n                </Tooltip>\r\n              </TableCell>\r\n              <TableCell>\r\n                Status\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {orders.map((order) => (\r\n              <TableRow\r\n                hover\r\n                key={order.id}\r\n              >\r\n                <TableCell>\r\n                  {order.ref}\r\n                </TableCell>\r\n                <TableCell>\r\n                  {order.customer.name}\r\n                </TableCell>\r\n                <TableCell>\r\n                  {moment(order.createdAt).format('DD/MM/YYYY')}\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Chip\r\n                    color=\"primary\"\r\n                    label={order.status}\r\n                    size=\"small\"\r\n                  />\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Box>\r\n    </PerfectScrollbar>\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n        p: 2\r\n      }}\r\n    >\r\n      <Button\r\n        color=\"primary\"\r\n        endIcon={<ArrowRightIcon />}\r\n        size=\"small\"\r\n        variant=\"text\"\r\n      >\r\n        View all\r\n      </Button>\r\n    </Box>\r\n  </Card>\r\n);\r\n\r\nexport default LatestOrders;\r\n","import { v4 as uuid } from 'uuid';\r\nimport moment from 'moment';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText\r\n} from '@material-ui/core';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\n\r\nconst products = [\r\n  {\r\n    id: uuid(),\r\n    name: 'Dropbox',\r\n    imageUrl: '/static/images/products/product_1.png',\r\n    updatedAt: moment().subtract(2, 'hours')\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'Medium Corporation',\r\n    imageUrl: '/static/images/products/product_2.png',\r\n    updatedAt: moment().subtract(2, 'hours')\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'Slack',\r\n    imageUrl: '/static/images/products/product_3.png',\r\n    updatedAt: moment().subtract(3, 'hours')\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'Lyft',\r\n    imageUrl: '/static/images/products/product_4.png',\r\n    updatedAt: moment().subtract(5, 'hours')\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'GitHub',\r\n    imageUrl: '/static/images/products/product_5.png',\r\n    updatedAt: moment().subtract(9, 'hours')\r\n  }\r\n];\r\n\r\nconst LatestProducts = (props) => (\r\n  <Card {...props}>\r\n    <CardHeader\r\n      subtitle={`${products.length} in total`}\r\n      title=\"Latest Products\"\r\n    />\r\n    <Divider />\r\n    <List>\r\n      {products.map((product, i) => (\r\n        <ListItem\r\n          divider={i < products.length - 1}\r\n          key={product.id}\r\n        >\r\n          <ListItemAvatar>\r\n            <img\r\n              alt={product.name}\r\n              src={product.imageUrl}\r\n              style={{\r\n                height: 48,\r\n                width: 48\r\n              }}\r\n            />\r\n          </ListItemAvatar>\r\n          <ListItemText\r\n            primary={product.name}\r\n            secondary={`Updated ${product.updatedAt.fromNow()}`}\r\n          />\r\n          <IconButton\r\n            edge=\"end\"\r\n            size=\"small\"\r\n          >\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </ListItem>\r\n      ))}\r\n    </List>\r\n    <Divider />\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n        p: 2\r\n      }}\r\n    >\r\n      <Button\r\n        color=\"primary\"\r\n        endIcon={<ArrowRightIcon />}\r\n        size=\"small\"\r\n        variant=\"text\"\r\n      >\r\n        View all\r\n      </Button>\r\n    </Box>\r\n  </Card>\r\n);\r\n\r\nexport default LatestProducts;\r\n","import { Bar } from 'react-chartjs-2';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  useTheme,\r\n  colors\r\n} from '@material-ui/core';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\n\r\nconst Sales = (props) => {\r\n  const theme = useTheme();\r\n\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        backgroundColor: colors.indigo[500],\r\n        data: [18, 5, 19, 27, 29, 19, 20],\r\n        label: 'This year'\r\n      },\r\n      {\r\n        backgroundColor: colors.grey[200],\r\n        data: [11, 20, 12, 29, 30, 25, 13],\r\n        label: 'Last year'\r\n      }\r\n    ],\r\n    labels: ['1 Aug', '2 Aug', '3 Aug', '4 Aug', '5 Aug', '6 Aug']\r\n  };\r\n\r\n  const options = {\r\n    animation: false,\r\n    cornerRadius: 20,\r\n    layout: { padding: 0 },\r\n    legend: { display: false },\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          barThickness: 12,\r\n          maxBarThickness: 10,\r\n          barPercentage: 0.5,\r\n          categoryPercentage: 0.5,\r\n          ticks: {\r\n            fontColor: theme.palette.text.secondary\r\n          },\r\n          gridLines: {\r\n            display: false,\r\n            drawBorder: false\r\n          }\r\n        }\r\n      ],\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            fontColor: theme.palette.text.secondary,\r\n            beginAtZero: true,\r\n            min: 0\r\n          },\r\n          gridLines: {\r\n            borderDash: [2],\r\n            borderDashOffset: [2],\r\n            color: theme.palette.divider,\r\n            drawBorder: false,\r\n            zeroLineBorderDash: [2],\r\n            zeroLineBorderDashOffset: [2],\r\n            zeroLineColor: theme.palette.divider\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    tooltips: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      bodyFontColor: theme.palette.text.secondary,\r\n      borderColor: theme.palette.divider,\r\n      borderWidth: 1,\r\n      enabled: true,\r\n      footerFontColor: theme.palette.text.secondary,\r\n      intersect: false,\r\n      mode: 'index',\r\n      titleFontColor: theme.palette.text.primary\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card {...props}>\r\n      <CardHeader\r\n        action={(\r\n          <Button\r\n            endIcon={<ArrowDropDownIcon />}\r\n            size=\"small\"\r\n            variant=\"text\"\r\n          >\r\n            Last 7 days\r\n          </Button>\r\n        )}\r\n        title=\"Latest Sales\"\r\n      />\r\n      <Divider />\r\n      <CardContent>\r\n        <Box\r\n          sx={{\r\n            height: 400,\r\n            position: 'relative'\r\n          }}\r\n        >\r\n          <Bar\r\n            data={data}\r\n            options={options}\r\n          />\r\n        </Box>\r\n      </CardContent>\r\n      <Divider />\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          justifyContent: 'flex-end',\r\n          p: 2\r\n        }}\r\n      >\r\n        <Button\r\n          color=\"primary\"\r\n          endIcon={<ArrowRightIcon />}\r\n          size=\"small\"\r\n          variant=\"text\"\r\n        >\r\n          Overview\r\n        </Button>\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Sales;\r\n","import {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  LinearProgress,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport { orange } from '@material-ui/core/colors';\r\nimport InsertChartIcon from '@material-ui/icons/InsertChartOutlined';\r\n\r\nconst TasksProgress = (props) => (\r\n  <Card\r\n    sx={{ height: '100%' }}\r\n    {...props}\r\n  >\r\n    <CardContent>\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        sx={{ justifyContent: 'space-between' }}\r\n      >\r\n        <Grid item>\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            gutterBottom\r\n            variant=\"h6\"\r\n          >\r\n            TASKS PROGRESS\r\n          </Typography>\r\n          <Typography\r\n            color=\"textPrimary\"\r\n            variant=\"h3\"\r\n          >\r\n            75.5%\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Avatar\r\n            sx={{\r\n              backgroundColor: orange[600],\r\n              height: 56,\r\n              width: 56\r\n            }}\r\n          >\r\n            <InsertChartIcon />\r\n          </Avatar>\r\n        </Grid>\r\n      </Grid>\r\n      <Box sx={{ pt: 3 }}>\r\n        <LinearProgress\r\n          value={75.5}\r\n          variant=\"determinate\"\r\n        />\r\n      </Box>\r\n    </CardContent>\r\n  </Card>\r\n);\r\n\r\nexport default TasksProgress;\r\n","import {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport { green } from '@material-ui/core/colors';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport PeopleIcon from '@material-ui/icons/PeopleOutlined';\r\n\r\nconst TotalCustomers = (props) => (\r\n  <Card {...props}>\r\n    <CardContent>\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        sx={{ justifyContent: 'space-between' }}\r\n      >\r\n        <Grid item>\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            gutterBottom\r\n            variant=\"h6\"\r\n          >\r\n            TOTAL CUSTOMERS\r\n          </Typography>\r\n          <Typography\r\n            color=\"textPrimary\"\r\n            variant=\"h3\"\r\n          >\r\n            1,600\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Avatar\r\n            sx={{\r\n              backgroundColor: green[600],\r\n              height: 56,\r\n              width: 56\r\n            }}\r\n          >\r\n            <PeopleIcon />\r\n          </Avatar>\r\n        </Grid>\r\n      </Grid>\r\n      <Box\r\n        sx={{\r\n          alignItems: 'center',\r\n          display: 'flex',\r\n          pt: 2\r\n        }}\r\n      >\r\n        <ArrowUpwardIcon sx={{ color: green[900] }} />\r\n        <Typography\r\n          variant=\"body2\"\r\n          sx={{\r\n            color: green[900],\r\n            mr: 1\r\n          }}\r\n        >\r\n          16%\r\n        </Typography>\r\n        <Typography\r\n          color=\"textSecondary\"\r\n          variant=\"caption\"\r\n        >\r\n          Since last month\r\n        </Typography>\r\n      </Box>\r\n    </CardContent>\r\n  </Card>\r\n);\r\n\r\nexport default TotalCustomers;\r\n","import {\r\n  Avatar,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport { indigo } from '@material-ui/core/colors';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\n\r\nconst TotalProfit = (props) => (\r\n  <Card {...props}>\r\n    <CardContent>\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        sx={{ justifyContent: 'space-between' }}\r\n      >\r\n        <Grid item>\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            gutterBottom\r\n            variant=\"h6\"\r\n          >\r\n            TOTAL PROFIT\r\n          </Typography>\r\n          <Typography\r\n            color=\"textPrimary\"\r\n            variant=\"h3\"\r\n          >\r\n            $23,200\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Avatar\r\n            sx={{\r\n              backgroundColor: indigo[600],\r\n              height: 56,\r\n              width: 56\r\n            }}\r\n          >\r\n            <AttachMoneyIcon />\r\n          </Avatar>\r\n        </Grid>\r\n      </Grid>\r\n    </CardContent>\r\n  </Card>\r\n);\r\n\r\nexport default TotalProfit;\r\n","import { Doughnut } from 'react-chartjs-2';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Typography,\r\n  colors,\r\n  useTheme\r\n} from '@material-ui/core';\r\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport TabletIcon from '@material-ui/icons/Tablet';\r\n\r\nconst TrafficByDevice = (props) => {\r\n  const theme = useTheme();\r\n\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        data: [63, 15, 22],\r\n        backgroundColor: [\r\n          colors.indigo[500],\r\n          colors.red[600],\r\n          colors.orange[600]\r\n        ],\r\n        borderWidth: 8,\r\n        borderColor: colors.common.white,\r\n        hoverBorderColor: colors.common.white\r\n      }\r\n    ],\r\n    labels: ['Desktop', 'Tablet', 'Mobile']\r\n  };\r\n\r\n  const options = {\r\n    animation: false,\r\n    cutoutPercentage: 80,\r\n    layout: { padding: 0 },\r\n    legend: {\r\n      display: false\r\n    },\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n    tooltips: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      bodyFontColor: theme.palette.text.secondary,\r\n      borderColor: theme.palette.divider,\r\n      borderWidth: 1,\r\n      enabled: true,\r\n      footerFontColor: theme.palette.text.secondary,\r\n      intersect: false,\r\n      mode: 'index',\r\n      titleFontColor: theme.palette.text.primary\r\n    }\r\n  };\r\n\r\n  const devices = [\r\n    {\r\n      title: 'Desktop',\r\n      value: 63,\r\n      icon: LaptopMacIcon,\r\n      color: colors.indigo[500]\r\n    },\r\n    {\r\n      title: 'Tablet',\r\n      value: 15,\r\n      icon: TabletIcon,\r\n      color: colors.red[600]\r\n    },\r\n    {\r\n      title: 'Mobile',\r\n      value: 23,\r\n      icon: PhoneIcon,\r\n      color: colors.orange[600]\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Card {...props}>\r\n      <CardHeader title=\"Traffic by Device\" />\r\n      <Divider />\r\n      <CardContent>\r\n        <Box\r\n          sx={{\r\n            height: 300,\r\n            position: 'relative'\r\n          }}\r\n        >\r\n          <Doughnut\r\n            data={data}\r\n            options={options}\r\n          />\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            pt: 2\r\n          }}\r\n        >\r\n          {devices.map(({\r\n            color,\r\n            icon: Icon,\r\n            title,\r\n            value\r\n          }) => (\r\n            <Box\r\n              key={title}\r\n              sx={{\r\n                p: 1,\r\n                textAlign: 'center'\r\n              }}\r\n            >\r\n              <Icon color=\"action\" />\r\n              <Typography\r\n                color=\"textPrimary\"\r\n                variant=\"body1\"\r\n              >\r\n                {title}\r\n              </Typography>\r\n              <Typography\r\n                style={{ color }}\r\n                variant=\"h2\"\r\n              >\r\n                {value}\r\n                %\r\n              </Typography>\r\n            </Box>\r\n          ))}\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TrafficByDevice;\r\n","import { Helmet } from 'react-helmet';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Grid\r\n} from '@material-ui/core';\r\nimport Budget from 'src/components/dashboard//Budget';\r\nimport LatestOrders from 'src/components/dashboard//LatestOrders';\r\nimport LatestProducts from 'src/components/dashboard//LatestProducts';\r\nimport Sales from 'src/components/dashboard//Sales';\r\nimport TasksProgress from 'src/components/dashboard//TasksProgress';\r\nimport TotalCustomers from 'src/components/dashboard//TotalCustomers';\r\nimport TotalProfit from 'src/components/dashboard//TotalProfit';\r\nimport TrafficByDevice from 'src/components/dashboard//TrafficByDevice';\r\n\r\nconst Dashboard = () => (\r\n  <>\r\n    <Helmet>\r\n      <title>Main | 生産管理 </title>\r\n    </Helmet>\r\n    <Box\r\n      sx={{\r\n        backgroundColor: 'background.default',\r\n        minHeight: '100%',\r\n        py: 3\r\n      }}\r\n    >\r\n      <Container maxWidth={false}>\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n        >\r\n          <Grid\r\n            item\r\n            lg={3}\r\n            sm={6}\r\n            xl={3}\r\n            xs={12}\r\n          >\r\n            <Budget />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={3}\r\n            sm={6}\r\n            xl={3}\r\n            xs={12}\r\n          >\r\n            <TotalCustomers />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={3}\r\n            sm={6}\r\n            xl={3}\r\n            xs={12}\r\n          >\r\n            <TasksProgress />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={3}\r\n            sm={6}\r\n            xl={3}\r\n            xs={12}\r\n          >\r\n            <TotalProfit sx={{ height: '100%' }} />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={8}\r\n            md={12}\r\n            xl={9}\r\n            xs={12}\r\n          >\r\n            <Sales />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={4}\r\n            md={6}\r\n            xl={3}\r\n            xs={12}\r\n          >\r\n            <TrafficByDevice sx={{ height: '100%' }} />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={4}\r\n            md={6}\r\n            xl={3}\r\n            xs={12}\r\n          >\r\n            <LatestProducts sx={{ height: '100%' }} />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={8}\r\n            md={12}\r\n            xl={9}\r\n            xs={12}\r\n          >\r\n            <LatestOrders />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  </>\r\n);\r\n\r\nexport default Dashboard;\r\n","import React, { useState } from 'react'\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  // Grid,\r\n  Link,\r\n  TextField,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nconst Login = () => {\r\n  const navigate = useNavigate();\r\n  const [employee, setEmployee] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  // const onlogin = (e) => {\r\n  //   alert(employee + ':' + password)\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Login | 生産管理 </title>\r\n      </Helmet>\r\n      <Box\r\n        sx={{\r\n          backgroundColor: 'background.default',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          height: '100%',\r\n          justifyContent: 'center'\r\n        }}\r\n      >\r\n        <Container maxWidth=\"sm\">\r\n          <Formik\r\n            initialValues={{\r\n              employee: '',\r\n              password: ''\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n              employee: Yup.string().min(6).required('社員番号を６文字以上で入力してください').max(255).required('社員番号を入力して下さい'),\r\n              password: Yup.string().max(255).required('パスワードを入力してください')\r\n            })}\r\n            onSubmit={() => {\r\n              navigate('/app/dashboard', { replace: true });\r\n            }}\r\n          >\r\n            {({\r\n              errors,\r\n              // handleBlur,\r\n              // handleChange,\r\n              handleSubmit,\r\n              isSubmitting,\r\n              touched,\r\n              values\r\n            }) => (\r\n              <form onSubmit={handleSubmit}>\r\n                <Box sx={{ mb: 3 }}>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    variant=\"h2\"\r\n                  >\r\n                    Login\r\n                  </Typography>\r\n                </Box>\r\n                <TextField\r\n                  error={Boolean(touched.employee && errors.employee)}\r\n                  fullWidth\r\n                  helperText={touched.employee && errors.employee}\r\n                  label=\"社員番号\"\r\n                  margin=\"normal\"\r\n                  name=\"employee\"\r\n                  // onBlur={handleBlur}\r\n                  // onChange={handleChange}\r\n                  type=\"employee\"\r\n                  // value={values.employee}\r\n                  variant=\"outlined\"\r\n                  onChange={(e) => setEmployee(e.target.value)}\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.password && errors.password)}\r\n                  fullWidth\r\n                  helperText={touched.password && errors.password}\r\n                  label=\"パスワード\"\r\n                  margin=\"normal\"\r\n                  name=\"password\"\r\n                  // onBlur={handleBlur}\r\n                  // onChange={handleChange}\r\n                  type=\"password\"\r\n                  // value={values.password}\r\n                  variant=\"outlined\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                <Box sx={{ py: 2 }}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    disabled={isSubmitting}\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                  >\r\n                    ログイン\r\n                  </Button>\r\n                </Box>\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  variant=\"body1\"\r\n                >\r\n                  アカウント\r\n                  <Link\r\n                    component={RouterLink}\r\n                    to=\"/register\"\r\n                    variant=\"h5\"\r\n                  >\r\n                    登録はこちら\r\n                  </Link>\r\n                  から...\r\n                </Typography>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { Helmet } from 'react-helmet';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nconst NotFound = () => (\r\n  <>\r\n    <Helmet>\r\n      <title>404 | 生産管理 </title>\r\n    </Helmet>\r\n    <Box\r\n      sx={{\r\n        backgroundColor: 'background.default',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        height: '100%',\r\n        justifyContent: 'center'\r\n      }}\r\n    >\r\n      <Container maxWidth=\"md\">\r\n        <Typography\r\n          align=\"center\"\r\n          color=\"textPrimary\"\r\n          variant=\"h1\"\r\n        >\r\n          404: ページねーよ\r\n        </Typography>\r\n        <Typography\r\n          align=\"center\"\r\n          color=\"textPrimary\"\r\n          variant=\"subtitle2\"\r\n        >\r\n          {/* You either tried some shady route or you came here by mistake.\r\n          Whichever it is, try using the navigation */}\r\n        </Typography>\r\n        <Box sx={{ textAlign: 'center' }}>\r\n          <img\r\n            alt=\"Under development\"\r\n            src=\"/static/images/undraw_page_not_found_su7k.svg\"\r\n            style={{\r\n              marginTop: 50,\r\n              display: 'inline-block',\r\n              maxWidth: '100%',\r\n              width: 560\r\n            }}\r\n          />\r\n        </Box>\r\n      </Container>\r\n    </Box>\r\n  </>\r\n);\r\n\r\nexport default NotFound;\r\n","import { useNavigate } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  TextField,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nconst Register = () => {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Register | 生産管理 </title>\r\n      </Helmet>\r\n      <Box\r\n        sx={{\r\n          backgroundColor: 'background.default',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          height: '100%',\r\n          justifyContent: 'center'\r\n        }}\r\n      >\r\n        <Container maxWidth=\"sm\">\r\n          <Formik\r\n            initialValues={{\r\n              employee: '',\r\n              email: '',\r\n              userName: '',\r\n              userNameShort: '',\r\n              password: '',\r\n              passwordConfirmation: '',\r\n              policy: false\r\n            }}\r\n            validationSchema={\r\n              Yup.object().shape({\r\n                email: Yup.string().email('正しいメールアドレスを入力してください').max(255).required('メールアドレスを入力してください'),\r\n                employee: Yup.string().max(255).required('社員番号を入力して下さい'),\r\n                userName: Yup.string().max(255).required('フルネームで入力して下いさい'),\r\n                userNameShort: Yup.string().max(255).required('短縮名で入力して下さい'),\r\n                password: Yup.string().max(255).required('パスワードを入力して下さい'),\r\n                passwordConfirmation: Yup.string().oneOf([Yup.ref('password')], 'パスワードが一致しません').required('確認用パスワードを入力してください'),\r\n              })\r\n            }\r\n            onSubmit={() => {\r\n              navigate('/app/dashboard', { replace: true });\r\n            }}\r\n          >\r\n            {({\r\n              errors,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              isSubmitting,\r\n              touched,\r\n              values\r\n            }) => (\r\n              <form onSubmit={handleSubmit}>\r\n                <Box sx={{ mb: 3 }}>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    variant=\"h2\"\r\n                  >\r\n                    Register\r\n                  </Typography>\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    gutterBottom\r\n                    variant=\"body2\"\r\n                  >\r\n                    メールを使用して新しいアカウントを登録します<br />\r\n                    登録後、メールを確認しリンクよりアクセスして下さい\r\n                  </Typography>\r\n                </Box>\r\n                <TextField\r\n                  error={Boolean(touched.employee && errors.employee)}\r\n                  fullWidth\r\n                  helperText={touched.employee && errors.employee}\r\n                  label=\"社員番号\"\r\n                  margin=\"normal\"\r\n                  name=\"employee\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.employee}\r\n                  variant=\"outlined\"\r\n                />\r\n\r\n                <TextField\r\n                  error={Boolean(touched.userName && errors.userName)}\r\n                  fullWidth\r\n                  helperText={touched.userName && errors.userName}\r\n                  label=\"名前\"\r\n                  margin=\"normal\"\r\n                  name=\"userName\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.userName}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.userNameShort && errors.userNameShort)}\r\n                  fullWidth\r\n                  helperText={touched.userNameShort && errors.userNameShort}\r\n                  label=\"短縮名\"\r\n                  margin=\"normal\"\r\n                  name=\"userNameShort\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.userNameShort}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.email && errors.email)}\r\n                  fullWidth\r\n                  helperText={touched.email && errors.email}\r\n                  label=\"メールアドレス\"\r\n                  margin=\"normal\"\r\n                  name=\"email\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.password && errors.password)}\r\n                  fullWidth\r\n                  helperText={touched.password && errors.password}\r\n                  label=\"パスワード\"\r\n                  margin=\"normal\"\r\n                  name=\"password\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.passwordConfirmation && errors.passwordConfirmation)}\r\n                  fullWidth\r\n                  helperText={touched.passwordConfirmation && errors.passwordConfirmation}\r\n                  label=\"パスワード確認\"\r\n                  margin=\"normal\"\r\n                  name=\"passwordConfirmation\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={values.passwordConfirmation}\r\n                  variant=\"outlined\"\r\n                />\r\n                <Box sx={{ py: 2 }}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    disabled={isSubmitting}\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                  >\r\n                    アカウント登録\r\n                  </Button>\r\n                </Box>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","export const ADD_EVENT_LOG = 'ADD_EVENT_LOG'\r\nexport const DELETE_ADDITIONAL_ORDER = 'DELETE_ADDITIONAL_ORDER'\r\n\r\n\r\nexport const ADDITIONAL_ORDER_FETCH = 'ADDITIONAL_ORDER_FETCH'\r\n\r\n// 荷札出力済\r\nexport const PRINT_TAG_DONE = 'PRINT_TAG_DONE'\r\n// 送り状出力済\r\nexport const PRINT_INVOICE_DONE = 'PRINT_INVOICE_DONE'\r\n// 明細表出力済\r\nexport const PRINT_DETAIL_DONE = 'PRINT_DETAIL_DONE'\r\n\r\n//\r\n//  各ラベルの操作\r\n//\r\nexport const LABEL_LOADING = 'LABEL_LOADING'\r\nexport const LABEL_DELETE = 'LABEL_DELETE'\r\n\r\n//\r\n//  ターゲットラベル\r\nexport const CHOICE_CID = 'CHOICE_CID'\r\n\r\n\r\n\r\n// ファイルアップロード\r\nexport const UPDATE_FILE = 'UPDATE_FILE'","import { createContext } from 'react'\r\n\r\nconst AppContext = createContext()\r\n\r\nexport default AppContext\r\n","export const wareki = (dt) => {\r\n\r\n    return '2021-01-01'\r\n}\r\n\r\nexport const tagColor = color_number => {\r\n    let back_color\r\n    switch (color_number) {\r\n        case \"0\": back_color = \"glay\"; break\r\n        case \"1\": back_color = \"green\"; break\r\n        case \"2\": back_color = \"red\"; break\r\n        case \"3\": back_color = \"blue\"; break\r\n        default: back_color = \"glay\";\r\n    }\r\n    return back_color\r\n}","import React, { Component } from 'react'\r\nimport QRCode from 'qrcode.react'\r\nimport './print.css'\r\nimport { tagColor } from '../../../utils/common'\r\n\r\nclass Labels extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.componentRef = React.createRef()\r\n        this.partNo = '000' + this.props.props.parts_no\r\n        this.qrcode = '01' + this.props.props.cid + this.partNo.slice(this.partNo.length - 3, this.partNo.length)\r\n    }\r\n\r\n    // ラベル色\r\n    divStyle = {\r\n        backgroundColor: tagColor(this.props.props.color_number)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"wrapper\">\r\n                    <div className=\"pageWrapper\">\r\n\r\n                        <div className=\"makerName\">\r\n                            <div>{this.props.props.cust_name}御中</div>\r\n                        </div>\r\n                        <div className=\"dueDate\">\r\n                            <div>{this.props.props.dod}</div>\r\n                            <div className=\"orderNo\">{this.props.props.order_cd}</div>\r\n                        </div>\r\n\r\n                        <div className=\"teiName\">\r\n                            <div>{this.props.props.tei_name}様</div>\r\n                        </div>\r\n\r\n                        <div className=\"productName\">\r\n                            <div>{this.props.props.product_name}</div>\r\n                        </div>\r\n                        <div className=\"qty\">\r\n                            <div className=\"qtySize\">{this.props.props.qty}</div>\r\n                            <div className=\"qtyTotalSize\">({this.props.props.qty}/{this.props.props.total_qty})</div>\r\n                        </div>\r\n                        <div className=\"address\">\r\n                            <div>{this.props.props.address}</div>\r\n                        </div>\r\n\r\n                        <div className=\"labelHeader\">\r\n                            <div className=\"labelTag\">\r\n                                <div style={this.divStyle} className=\"labelNumber\">{this.props.props.tag_number}</div>\r\n                            </div>\r\n                            <div className=\"labelQr\">\r\n                                <QRCode className=\"qr\" value={this.qrcode} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default Labels","import React, { Component, useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport './print.css'\r\nimport Labels from './Labels'\r\n\r\nclass Previews extends Component {\r\n\r\n    // }= ({ cid, order }) => {\r\n    // const componentRef = useRef();\r\n    // const [tagInfo, getTagInfo] = useState([])\r\n    // console.log(order)\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            tagInfo: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(`http://sv8/api/additional/getLabelsInfo/${this.props.cid}/${this.props.order}`)\r\n            .then(response => {\r\n                console.log(response.data + ' Did ')\r\n                this.setState({ tagInfo: response.data })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.state.tagInfo.map((val) => {\r\n                    return <Labels props={val} />\r\n                })\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n// Print.propTypes = {\r\n//     classes: PropTypes.object.isRequired,\r\n//     src: PropTypes.object.isRequired\r\n// };\r\n\r\n// export default withStyles(styles)(Previews);\r\n\r\nexport default Previews","import React, { useContext } from 'react'\r\nimport AppContext from '../../contexts/AppContext'\r\n// import axios from 'axios'\r\n// import QRCode from \"qrcode.react\"\r\n\r\nimport {\r\n    ADD_EVENT_LOG,\r\n    LABEL_DELETE\r\n} from '../../actions'\r\n\r\nconst TagLabel = ({ src }) => {\r\n    // const componentRef = useRef();\r\n    const { dispatch } = useContext(AppContext)\r\n\r\n    let back_color\r\n    switch (src.color_number) {\r\n        case \"0\": back_color = \"glay\"; break\r\n        case \"1\": back_color = \"green\"; break\r\n        case \"2\": back_color = \"red\"; break\r\n        case \"3\": back_color = \"blue\"; break\r\n        default: back_color = \"glay\";\r\n    }\r\n\r\n    const divStyle = {\r\n        backgroundColor: back_color,\r\n    }\r\n\r\n    const DeleteLabel = e => {\r\n        const result = window.confirm(`製品名：${src.product_name} を削除しても良いですか？`)\r\n        if (result) {\r\n            dispatch({\r\n                type: ADD_EVENT_LOG,\r\n                tei_name: `ラベルを削除しました。`,\r\n                operatedAt: Date()\r\n            })\r\n            dispatch({ type: LABEL_DELETE, src })\r\n        }\r\n\r\n    }\r\n\r\n    const PrintLabel = e => {\r\n        console.log(e)\r\n    }\r\n\r\n    return (\r\n        <div className=\"lbl__wrapper\" >\r\n            <div className=\"lbl__pageWrapper\">\r\n                <div className=\"labelHeader\">\r\n                    <div className=\"labelTag\">\r\n                        <div style={divStyle} className=\"labelNumber\">{src.tag_number}</div>\r\n                    </div>\r\n                    <div>\r\n                        {src.parts_no}\r\n                    </div>\r\n                    {/* <div className=\"labelQr\">\r\n                        <QRCode className=\"qrCode\" value={src.cid} />\r\n                    </div> */}\r\n                    <div className=\"operArea\">\r\n                        <input type=\"button\" value=\"印刷しない\" onClick={(e) => DeleteLabel({ src })} />\r\n                        <input type=\"button\" value=\"印刷\" className=\"noprint\" onClick={(e) => PrintLabel({ src })} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"makerName\">\r\n                    <div>{src.cust_name}御中</div>\r\n                </div>\r\n                <div className=\"dueDate\">\r\n                    <div>{src.dod}</div>\r\n                </div>\r\n\r\n                <div className=\"teiName\">\r\n                    <div>{src.tei_name}</div>\r\n                </div>\r\n\r\n                <div className=\"productName\">\r\n                    <div>{src.product_name}</div>\r\n                </div>\r\n                <div className=\"qty\">\r\n                    <div className=\"qtySize\">{src.qty}</div>\r\n                    <div className=\"qtyTotalSize\">{src.qty_total}</div>\r\n                </div>\r\n                <div className=\"address\">\r\n                    <div>{src.address}</div>\r\n                </div>\r\n                <div className=\"labelFooter\">{src.tag_number}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default TagLabel\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport AppContext from '../contexts/AppContext'\r\n\r\nimport TagLabel from \"../components/additional/TagLabel\";\r\nimport { LABEL_LOADING } from '../actions'\r\n\r\nconst TagLabels = () => {\r\n    const { state, dispatch } = useContext(AppContext)\r\n\r\n    console.log(state)\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://sv8/api/additional/getLabelsInfo/${state.choiceLabel.cid}/${state.choiceLabel.order_no}`)\r\n            .then(response => {\r\n                console.log(response.data)\r\n                dispatch({\r\n                    type: LABEL_LOADING,\r\n                    labelData: response.data\r\n                })\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <header>\r\n                <nav>\r\n                    <div className='header-inner'>追加依頼サポートシステム</div>\r\n                    <Link to=\"/\">main!</Link>\r\n                </nav>\r\n            </header>\r\n            <main>\r\n                <div className={'additionalWrapper '} >\r\n                    {state.labelData.map((src, idx) => (\r\n                        <TagLabel key={idx} src={src} />\r\n                    ))}\r\n                </div>\r\n            </main>\r\n        </React.Fragment >\r\n    );\r\n}\r\nexport default TagLabels\r\n","import React, { useContext, forwardRef, useRef, useState } from \"react\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Slide,\r\n  Button\r\n} from '@material-ui/core';\r\nimport axios from 'axios'\r\nimport {\r\n  ADD_EVENT_LOG,\r\n  DELETE_ADDITIONAL_ORDER,\r\n  PRINT_TAG_DONE,\r\n  CHOICE_CID,\r\n} from '../../actions'\r\n\r\nimport AppContext from '../../contexts/AppContext'\r\n\r\nimport { Link as RouterLink, Route } from 'react-router-dom'\r\n\r\nimport './main.css'\r\nimport { tagColor } from '../../utils/common'\r\nimport Previews from './prints/Previews'\r\nimport TagLabels from '../../pages/TagLabels'\r\n\r\n// React forwardRef\r\nconst Transition = forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"down\" ref={ref} {...props} />;\r\n});\r\n\r\nconst AdditionalList = ({ src }) => {\r\n  const componentRef = useRef();\r\n  const { dispatch } = useContext(AppContext)\r\n  const id = src.id\r\n  const cid = src.cid\r\n  const order_no = src.order_no\r\n  const tei_name = src.tei_name\r\n\r\n  const handleClickPrintButton = e => {\r\n    const result = window.confirm(`邸名：${tei_name})を本当に削除しても良いですか？`)\r\n    if (result) {\r\n      dispatch({\r\n        type: ADD_EVENT_LOG,\r\n        tei_name: `イベント(id=)を削除しました。`,\r\n        operatedAt: '2021-05-05'\r\n      })\r\n      dispatch({ type: DELETE_ADDITIONAL_ORDER, id })\r\n    }\r\n  }\r\n\r\n  const tagPrintButton = e => {\r\n    dispatch({\r\n      type: ADD_EVENT_LOG,\r\n      tei_name: `${tei_name}様邸の荷札印刷完了しました。`,\r\n      operatedAt: '2021-05-05'\r\n    })\r\n    dispatch({\r\n      type: PRINT_TAG_DONE,\r\n      tag_print_done: true,\r\n      id,\r\n    })\r\n    console.log('荷札')\r\n  }\r\n\r\n  const labelChoice = e => {\r\n    dispatch({\r\n      type: CHOICE_CID,\r\n      cid: cid,\r\n      order_no: order_no\r\n    })\r\n  }\r\n\r\n\r\n  const invoicePrintButton = e => {\r\n    console.log('送状')\r\n  }\r\n\r\n  // Accept process\r\n  const acceptButton = d => {\r\n    axios.post('http://localhost:8000/api/tagInformations/', {\r\n      \"order_no\": d.order_no,\r\n      \"cid\": d.cid,\r\n      \"category\": d.cate,\r\n      \"accepted_at\": \"2021-06-15T18:07:00+09:00\",\r\n      \"accepted_user\": 1,\r\n      \"printed_at\": \"2021-06-16T18:07:00+09:00\",\r\n      \"printed_user\": 1,\r\n      \"printed_cnt\": 1,\r\n      \"invoiced_at\": \"2021-06-15T18:07:00+09:00\",\r\n      \"invoiced_user\": 1\r\n    })\r\n      .then(response => { console.log(\"body:\", response.data) })\r\n  }\r\n\r\n  // Accept Data Delete Process\r\n  const deleteButton = val => {\r\n    axios.delete('http://localhost:8000/api/tagInformations/3/', {\r\n      param: { \"order_no\": val.order_no }\r\n    })\r\n      .then(res => { console.log(res.data) })\r\n  }\r\n\r\n  // Accept Data Update Process\r\n  const updateButton = val => {\r\n    axios.put('http://localhost:8000/api/tagInformations/3', {\r\n      param: { \"order_no\": val.order_no }\r\n    })\r\n      .then(res => { console.log(res.data) })\r\n  }\r\n\r\n  // const handleChangeFile = e => {\r\n  //   console.log('明細')\r\n  //   const target = e.target\r\n  //   const file = target.files.item(0)\r\n  //   updateFile(dispatch, file)\r\n  // }\r\n\r\n  // const updateFile = (dispatch, file) => {\r\n  //   dispatch({ type: UPDATE_FILE, file: file })\r\n  // }\r\n\r\n  const dat = Date.parse(src.due_date)\r\n\r\n  const divStyle = {\r\n    backgroundColor: tagColor(src.color_number),\r\n  }\r\n\r\n  const cate = src.cate === \"1\" ? \"鉄筋\" : \"部材\"\r\n  const is_iron = src.cate === \"1\" ? true : false\r\n  const is_invoice = src.vehicle_type === \"宅配便\" ? true : false\r\n  const is_urgent = src.time_designation === \"至急\" ? true : false\r\n\r\n  return (\r\n    <div className={'additionalInfoWrapper' + ' ' + (is_iron ? 'iron' : 'buzai') + ' ' + (is_urgent ? 'backgroundFlush red' : '')}>\r\n      <div className=\"additioalInfoHeader\">\r\n        <div className={'tagCnt' + ' ' + (is_iron ? 'tagCntIron' : 'tagCntBuzai')}>{src.cate_number_of_outputs}</div>\r\n        <div style={divStyle} className={'tagNumber'}>\r\n          {src.tag_number}\r\n        </div>\r\n        <div className='add__teiName'>\r\n          {src.tei_name}\r\n        </div>\r\n      </div>\r\n      <div className={'additonalInfoTableWrapp'}>\r\n        <table className={'additonalInfoTable'}>\r\n          <tbody>\r\n            <tr>\r\n              <td className='add__dueDate' colSpan='4'>\r\n                {src.due_date}\r\n                <button onClick={() => acceptButton(src)}> 受付</button>\r\n                <button onClick={() => deleteButton(src)}> 取消</button>\r\n                <button onClick={() => updateButton(src)}> 更新</button>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>{cate} </td>\r\n              <td>{src.cate_number_of_outputs}</td>\r\n              <td>{src.maker_short_name}</td>\r\n              <td> {src.order_no}</td>\r\n            </tr>\r\n            <tr>\r\n              <td colSpan='4'>\r\n                {src.custname}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td colSpan='2'>\r\n                {src.place}\r\n              </td>\r\n              <td colSpan='2'>\r\n                {src.vehicle_type} {src.time_designation}\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div className=\"operButtonWrapp\">\r\n        <Preview ref={componentRef} src={src} />\r\n        <Delete src={src} />\r\n        {/* <button onClick={e => handleClickPrintButton()}>Event</button> */}\r\n        <button onClick={e => tagPrintButton()}>荷札</button>\r\n        <button onClick={e => labelChoice()}>荷札2</button>\r\n\r\n        {is_invoice && <button onClick={e => invoicePrintButton()}>送状</button>}\r\n\r\n        {/* <input type='file' onChange={(e) => handleChangeFile(e)} />\r\n        <button onClick={() => uploadFile(dispatch, file)}>明細</button> */}\r\n\r\n        <button>\r\n          <RouterLink to='/tags'>荷札</RouterLink>\r\n        </button>\r\n        <Route path='/tags'>\r\n          <TagLabels src={src} />\r\n        </Route>\r\n\r\n        <ReactToPrint\r\n          trigger={() => (\r\n            <Button size=\"small\" variant=\"outlined\" color=\"primary\">\r\n              印刷\r\n            </Button>\r\n          )}\r\n          content={() => componentRef.current}\r\n        />\r\n        <div style={{ display: \"none\" }}>\r\n\r\n          <Previews ref={componentRef} src={src} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Delete = props => {\r\n  const componentRef = useRef();\r\n  const [open, setOpen] = useState(false);\r\n  const { src } = props;\r\n\r\n  function dialogOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function dialogClose() {\r\n    setOpen(false);\r\n  }\r\n  return (\r\n    <div>\r\n      <Button onClick={dialogOpen} size=\"small\" variant=\"outlined\" color=\"secondary\">\r\n        処理完了\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        onClose={dialogClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">以下の物件を完了しますか？</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            <p>{`${src.tei_name}`}</p>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={dialogClose} color=\"secondary\">\r\n            キャンセル\r\n          </Button>\r\n          <Button onClick={dialogClose} color=\"primary\">\r\n            完了\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Preview = props => {\r\n  const componentRef = useRef();\r\n  const [open, setOpen] = React.useState(false);\r\n  const { src } = props;\r\n\r\n  function dialogOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function dialogClose() {\r\n    setOpen(false);\r\n  }\r\n  return (\r\n    <div>\r\n      <Button onClick={dialogOpen} size=\"small\" variant=\"outlined\" color=\"primary\">\r\n        プレビュー\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={dialogClose}\r\n        fullWidth=\"true\"\r\n        maxWidth=\"sm\"\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          {`${src.tei_name}を印刷しますか？`}\r\n        </DialogTitle>\r\n\r\n        <DialogContent>\r\n          {/* <Previews ref={componentRef} src={src} /> */}\r\n          <Previews ref={componentRef} cid={src.cid} order={src.order_no} />\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button onClick={dialogClose} variant=\"outlined\" color=\"secondary\">\r\n            キャンセル\r\n          </Button>\r\n          <ReactToPrint\r\n            trigger={() => (\r\n              <Button variant=\"outlined\" color=\"primary\">\r\n                印刷\r\n              </Button>\r\n            )}\r\n            content={() => componentRef.current}\r\n          />\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\n// const Preview = props => {\r\n//   const componentRef = useRef();\r\n//   const [open, setOpen] = React.useState(false);\r\n//   const {src} = props;\r\n\r\n//   function dialogOpen() {\r\n//     setOpen(true);\r\n//   }\r\n\r\n//   function handleClose() {\r\n//     setOpen(false);\r\n//   }\r\n//   return (\r\n//     <div>\r\n//       <button size=\"small\" color=\"primary\" onClick={handleClickOpen}>\r\n//         プレビュー\r\n//       </button>\r\n//       <Dialog\r\n//         open={open}\r\n//         onClose={handleClose}\r\n//         aria-labelledby=\"alert-dialog-title\"\r\n//         aria-describedby=\"alert-dialog-description\"\r\n//       >\r\n//         <DialogTitle id=\"alert-dialog-title\">{`${src.tag_name}を印刷しますか？`}</DialogTitle>\r\n//         <DialogContent>\r\n//           <Print ref={componentRef} src={src} />\r\n//         </DialogContent>\r\n//         <DialogActions>\r\n//           <button onClick={handleClose} color=\"primary\">\r\n//             キャンセル\r\n//           </button>\r\n//           <ReactToPrint\r\n//             trigger={() => (\r\n//               <button size=\"small\" color=\"primary\">\r\n//                 印刷\r\n//               </button>\r\n//             )}\r\n//             content={() => componentRef.current}\r\n//           />\r\n//         </DialogActions>\r\n//       </Dialog>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nexport default AdditionalList\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { Helmet } from 'react-helmet';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nimport { ADDITIONAL_ORDER_FETCH } from '../actions'\r\nimport AdditionalList from \"../components/additional/AdditionalList\";\r\nimport AppContext from '../contexts/AppContext'\r\n\r\nconst Additional = () => {\r\n    const { state, dispatch } = useContext(AppContext)\r\n\r\n    const fetch_order = () => {\r\n        axios.get('http://sv8/api/additional/getAdditionalOrder')\r\n            .then(response => {\r\n                console.log(response.data)\r\n                dispatch({ type: ADDITIONAL_ORDER_FETCH, additionalData: response.data })\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch_order()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const intervalId = setInterval(function () {\r\n            fetch_order()\r\n        }, 15000)\r\n        return (() => clearInterval(intervalId))\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>追加依頼サポート | 生産管理 </title>\r\n            </Helmet>\r\n            <header>\r\n                <nav>\r\n                    <div className='header-inner'>追加依頼サポートシステム</div>\r\n                    <RouterLink to=\"/tags\">荷札</RouterLink>\r\n                    <RouterLink to=\"/invoice\">送状</RouterLink>\r\n                </nav>\r\n            </header>\r\n            <main>\r\n                <div className={'additionalWrapper '} >\r\n                    {state.additionalData.map((src, idx) => (\r\n                        <AdditionalList key={idx} src={src} />\r\n                    ))}\r\n                </div>\r\n            </main>\r\n        </>\r\n    );\r\n}\r\nexport default Additional","import { Navigate } from 'react-router-dom';\r\nimport DashboardLayout from 'src/components/DashboardLayout';\r\nimport MainLayout from 'src/components/MainLayout';\r\nimport Account from 'src/pages/Account';\r\n// import CustomerList from 'src/pages/CustomerList';\r\nimport Dashboard from 'src/pages/Dashboard';\r\nimport Login from 'src/pages/Login';\r\nimport NotFound from 'src/pages/NotFound';\r\n// import ProductList from 'src/pages/ProductList';\r\nimport Register from 'src/pages/Register';\r\n// import Settings from 'src/pages/Settings';\r\n\r\nimport Additional from 'src/pages/Additional';\r\n\r\nconst routes = [\r\n  {\r\n    path: 'app',\r\n    element: <DashboardLayout />,\r\n    children: [\r\n      { path: 'account', element: <Account /> },\r\n      // { path: 'customers', element: <CustomerList /> },\r\n      { path: 'dashboard', element: <Dashboard /> },\r\n      // { path: 'products', element: <ProductList /> },\r\n      // { path: 'settings', element: <Settings /> },\r\n      { path: '*', element: <Navigate to=\"/404\" /> }\r\n    ]\r\n  },\r\n  {\r\n    path: '/',\r\n    element: <MainLayout />,\r\n    children: [\r\n      { path: 'additional', element: <Additional /> },\r\n      { path: 'login', element: <Login /> },\r\n      { path: 'register', element: <Register /> },\r\n      { path: '404', element: <NotFound /> },\r\n      { path: '/', element: <Navigate to=\"/app/dashboard\" /> },\r\n      { path: '*', element: <Navigate to=\"/404\" /> }\r\n    ]\r\n  }\r\n];\r\n\r\nexport default routes;\r\n","import { ADD_EVENT_LOG } from '../actions'\r\n\r\nconst events = (state = [], action) => {\r\n    switch (action.type) {\r\n        case ADD_EVENT_LOG:\r\n            const eventLog = {\r\n                tei_name: action.tei_name,\r\n                operatedAt: action.operatedAt\r\n            }\r\n            return [eventLog, ...state]\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default events\r\n","/*\r\n    荷札出力済\r\n    PRINT_TAG_DONE\r\n\r\n    送り状出力済\r\n    PRINT_INVOICE_DONE\r\n\r\n    明細表出力済\r\n    PRINT_DETAILS_DONE\r\n*/\r\n\r\n\r\nimport {\r\n    ADDITIONAL_ORDER_FETCH,\r\n    DELETE_ADDITIONAL_ORDER,\r\n    PRINT_TAG_DONE,\r\n    // PRINT_INVOICE_DONE,\r\n    // PRINT_DETAIL_DONE,\r\n} from '../actions'\r\n\r\nconst additionalData = (state = [], action) => {\r\n    switch (action.type) {\r\n        case ADDITIONAL_ORDER_FETCH:\r\n            return action.additionalData\r\n        case DELETE_ADDITIONAL_ORDER:\r\n            return state.filter(event => event.id !== action.id)\r\n        case PRINT_TAG_DONE:\r\n            return state.filter(event => event.id === action.id)\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default additionalData\r\n","/*\r\n    荷札出力済\r\n    PRINT_TAG_DONE\r\n\r\n    送り状出力済\r\n    PRINT_INVOICE_DONE\r\n\r\n    明細表出力済\r\n    PRINT_DETAILS_DONE\r\n*/\r\n\r\n\r\nimport {\r\n    LABEL_LOADING,\r\n    LABEL_DELETE,\r\n} from '../actions'\r\n\r\nconst labelData = (state = [], action) => {\r\n    switch (action.type) {\r\n        case LABEL_LOADING:\r\n            return action.labelData\r\n        case LABEL_DELETE:\r\n            return state.filter(event => event.parts_no !== action.src.parts_no)\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default labelData\r\n","\r\nimport { CHOICE_CID } from '../actions'\r\n\r\nconst choiceLabel = (state = [], action) => {\r\n    switch (action.type) {\r\n        case CHOICE_CID:\r\n            return { cid: action.cid, order_no: action.order_no }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default choiceLabel","import { combineReducers } from 'redux'\r\nimport events from './events'\r\nimport additionalData from './additionalData'\r\nimport labelData from './labelData'\r\nimport choiceLabel from './choiceLabel'\r\n\r\nexport default combineReducers({\r\n    events,\r\n    additionalData,\r\n    labelData,\r\n    choiceLabel\r\n})\r\n","import React, { useEffect, useReducer } from 'react';\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport { useRoutes } from 'react-router-dom';\r\nimport { ThemeProvider } from '@material-ui/core';\r\nimport GlobalStyles from 'src/components/GlobalStyles';\r\nimport 'src/mixins/chartjs';\r\nimport theme from 'src/theme';\r\nimport routes from 'src/routes';\r\n\r\nimport AppContext from './contexts/AppContext'\r\nimport reducer from './reducers'\r\n\r\nconst APP_KEY = 'appAdditional'\r\n\r\nconst App = () => {\r\n  const routing = useRoutes(routes);\r\n  const appState = localStorage.getItem(APP_KEY)\r\n  const initialState = appState ? JSON.parse(appState) : {\r\n    targetLabel: [],\r\n    events: [],\r\n    additionalData: [],\r\n    labelData: []\r\n  }\r\n\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(APP_KEY, JSON.stringify(state))\r\n  }, [state])\r\n\r\n  return (\r\n    <AppContext.Provider value={{ state, dispatch }}>\r\n      <ThemeProvider theme={theme}>\r\n        <GlobalStyles />\r\n        {routing}\r\n      </ThemeProvider>\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './App';\r\n\r\nReactDOM.render((\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>\r\n), document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}