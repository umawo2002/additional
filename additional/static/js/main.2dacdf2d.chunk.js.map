{"version":3,"sources":["serviceWorker.js","components/GlobalStyles.js","mixins/chartjs.js","theme/index.js","theme/shadows.js","theme/typography.js","components/Logo.js","components/DashboardNavbar.js","components/NavItem.js","components/DashboardSidebar.js","components/DashboardLayout.js","components/MainLayout.js","components/account/AccountProfile.js","components/account/AccountProfileDetails.js","pages/Account.js","components/dashboard/Budget.js","components/dashboard/LatestOrders.js","components/dashboard/LatestProducts.js","components/dashboard/Sales.js","components/dashboard/TasksProgress.js","components/dashboard/TotalCustomers.js","components/dashboard/TotalProfit.js","components/dashboard/TrafficByDevice.js","pages/Dashboard.js","pages/Login.js","pages/NotFound.js","pages/Register.js","actions/index.js","contexts/AppContext.js","utils/common.js","components/additional/prints/Previews.js","data/invoice_data.js","components/additional/invoice/InvoiceCSV.js","components/additional/AdditionalList.js","components/additional/upload/react-pdf.js","pages/Additional.js","pages/Invoice.js","routes.js","reducers/events.js","reducers/additionalData.js","reducers/labelData.js","reducers/choiceLabel.js","reducers/index.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","useStyles","makeStyles","createStyles","boxSizing","margin","padding","html","height","width","body","backgroundColor","a","textDecoration","GlobalStyles","Chart","helpers","extend","elements","Rectangle","prototype","draw","left","right","top","bottom","signX","signY","borderSkipped","radius","ctx","this","_chart","vm","_view","borderWidth","cornerRadius","config","options","horizontal","base","x","y","barSize","Math","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","strokeStyle","borderColor","lineWidth","corners","startCorner","indexOf","cornerAt","index","corner","moveTo","i","nextCornerId","floor","xTl","xTr","yTl","yTr","xBl","xBr","yBl","yBr","lineTo","quadraticCurveTo","fill","stroke","theme","createMuiTheme","palette","background","default","paper","colors","common","white","primary","contrastText","main","text","secondary","shadows","typography","h1","fontWeight","fontSize","letterSpacing","h2","h3","h4","h5","h6","overline","Logo","props","alt","src","root","flexGrow","color","DashboardNavbar","onMobileNavOpen","rest","useState","notifications","classes","console","log","AppBar","elevation","Toolbar","className","to","Box","sx","Hidden","lgDown","IconButton","Badge","badgeContent","length","variant","lgUp","onClick","NavItem","href","Icon","icon","title","useLocation","active","matchPath","path","end","pathname","ListItem","disableGutters","display","py","Button","component","RouterLink","justifyContent","textTransform","mr","size","user","items","method","TagIcon","TruckIcon","target","BarChartIcon","UserIcon","LockIcon","UserPlusIcon","AlertCircleIcon","DashboardSidebar","onMobileClose","openMobile","useEffect","content","flexDirection","alignItems","p","Avatar","cursor","Typography","Divider","List","map","item","Drawer","anchor","onClose","open","PaperProps","defaultProps","DashboardLayoutRoot","experimentalStyled","overflow","DashboardLayoutWrapper","flex","paddingTop","breakpoints","up","paddingLeft","DashboardLayoutContainer","DashboardLayoutContent","DashboardLayout","isMobileNavOpen","setMobileNavOpen","MainLayoutRoot","MainLayoutWrapper","MainLayoutContainer","MainLayoutContent","MainLayout","AccountProfile","Card","CardContent","gutterBottom","moment","format","CardActions","fullWidth","states","value","label","initialProf","userName","userNameShort","email","phone","section","AccountProfileDetails","values","setValues","handleChange","event","name","autoComplete","noValidate","CardHeader","subheader","Grid","container","spacing","md","xs","TextField","helperText","onChange","required","type","select","SelectProps","native","state","option","Account","Helmet","minHeight","Container","maxWidth","lg","Budget","red","pt","orders","id","uuid","ref","amount","customer","createdAt","status","LatestOrders","minWidth","Table","TableHead","TableRow","TableCell","sortDirection","Tooltip","enterDelay","TableSortLabel","direction","TableBody","order","hover","Chip","endIcon","products","imageUrl","updatedAt","subtract","LatestProducts","subtitle","product","divider","ListItemAvatar","style","ListItemText","fromNow","edge","Sales","useTheme","data","datasets","indigo","grey","labels","animation","layout","legend","maintainAspectRatio","responsive","scales","xAxes","barThickness","maxBarThickness","barPercentage","categoryPercentage","ticks","fontColor","gridLines","drawBorder","yAxes","beginAtZero","borderDash","borderDashOffset","zeroLineBorderDash","zeroLineBorderDashOffset","zeroLineColor","tooltips","bodyFontColor","enabled","footerFontColor","intersect","mode","titleFontColor","action","position","TasksProgress","orange","LinearProgress","TotalCustomers","green","TotalProfit","TrafficByDevice","hoverBorderColor","cutoutPercentage","devices","LaptopMacIcon","TabletIcon","PhoneIcon","textAlign","Dashboard","sm","xl","Login","Cookie","navigate","useNavigate","setEmployee","setPassword","initialValues","employee","password","validationSchema","Yup","shape","max","onSubmit","replace","errors","handleSubmit","isSubmitting","touched","mb","error","e","disabled","Link","NotFound","align","marginTop","Register","passwordConfirmation","policy","oneOf","handleBlur","onBlur","ADD_EVENT_LOG","DELETE_ADDITIONAL_ORDER","ADDITIONAL_ORDER_FETCH","PRINT_TAG_DONE","PRINT_INVOICE_CSV","LABEL_LOADING","LABEL_DELETE","CHOICE_CID","AppContext","createContext","tagColor","color_number","back_color","dateYMD","date","dt","Date","getFullYear","getMonth","getDate","Previews","tagInfo","axios","get","cid","cate","then","response","setState","val","partNo","parts_no","qrcode","slice","divStyle","cust_name","dod","order_cd","tei_name","product_name","qty","total_qty","address","tag_number","Component","ibaInvoice","headers","key","formControl","selected","marginLeft","selectEmpty","comment","InvoiceCSV","order_no","manageNo","setManageNo","selectedDate","setSelectedDate","due_date","selectedDueDate","setSelectedDueDate","timeZoneCateStatus","setTimeZoneCateStatus","distPostNo","setDistPostNo","prefectures","distPrefectures","setDistPrefectures","place","distPlace","setDistPlace","distPlace2","setDistPlace2","dist_name","distName","setDistName","dist_tel_no","distTelNo","setDistTelNo","cate_name","hinName","setHinName","srcTelNo","setSrcTelNo","srcPostNo","setSrcPostNo","srcAddress","setSrcAddress","srcName","setSrcName","setComment","isSubmit","setIsSubmit","dat","setDat","orderNo","invoiceCate","coolCate","shipDate","dueDate","timeZone","distAddress","distKeisyou","srcHinName","custCode","unchinCode","preventDefault","defaultValue","utils","DateFnsUtils","locale","ja","disableToolbar","minDate","handleDateChange","KeyboardButtonProps","handleDueDateChange","FormControl","InputLabel","Select","labelId","code","n","MenuItem","orderer","multiline","rows","cols","filename","Transition","React","forwardRef","Slide","ava","square","getContrastText","deepOrange","rounded","Invoice","setOpen","dialogClose","Dialog","aria-labelledby","aria-describedby","DialogTitle","lineHeight","DialogContent","dividers","DialogActions","Done","TransitionComponent","DialogContentText","Preview","componentRef","useRef","trigger","current","AdditionalList","imgFile","useContext","dispatch","is_iron","is_invoice","vehicle_type","is_urgent","deadline","cate_number_of_outputs","d","post","delete","param","res","put","rowSpan","colSpan","custname","time_designation","Additional","fetch_order","additionalData","intervalId","setInterval","clearInterval","idx","Fragment","htmlFor","NativeSelect","inputProps","routes","element","children","events","eventLog","operatedAt","filter","labelData","choiceLabel","combineReducers","APP_KEY","App","routing","useRoutes","appState","localStorage","getItem","initialState","JSON","parse","targetLabel","useReducer","reducer","setItem","stringify","Provider","ThemeProvider","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2dacdf2d.chunk.js","sourcesContent":["/* eslint-disable */\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { createStyles, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => createStyles({\r\n  '@global': {\r\n    '*': {\r\n      boxSizing: 'border-box',\r\n      margin: 0,\r\n      padding: 0,\r\n    },\r\n    html: {\r\n      '-webkit-font-smoothing': 'antialiased',\r\n      '-moz-osx-font-smoothing': 'grayscale',\r\n      height: '100%',\r\n      width: '100%'\r\n    },\r\n    body: {\r\n      backgroundColor: '#f4f6f8',\r\n      height: '100%',\r\n      width: '100%'\r\n    },\r\n    a: {\r\n      textDecoration: 'none'\r\n    },\r\n    '#root': {\r\n      height: '100%',\r\n      width: '100%'\r\n    }\r\n  }\r\n}));\r\n\r\nconst GlobalStyles = () => {\r\n  useStyles();\r\n\r\n  return null;\r\n};\r\n\r\nexport default GlobalStyles;\r\n","/* eslint-disable no-underscore-dangle */\r\nimport { Chart } from 'react-chartjs-2';\r\n\r\n// ChartJS extension rounded bar chart\r\n// https://codepen.io/jedtrow/full/ygRYgo\r\nfunction draw() {\r\n  const { ctx } = this._chart;\r\n  const vm = this._view;\r\n  let { borderWidth } = vm;\r\n\r\n  let left;\r\n  let right;\r\n  let top;\r\n  let bottom;\r\n  let signX;\r\n  let signY;\r\n  let borderSkipped;\r\n  let radius;\r\n\r\n  // If radius is less than 0 or is large enough to cause drawing errors a max\r\n  //      radius is imposed. If cornerRadius is not defined set it to 0.\r\n  let { cornerRadius } = this._chart.config.options;\r\n  if (cornerRadius < 0) {\r\n    cornerRadius = 0;\r\n  }\r\n\r\n  if (typeof cornerRadius === 'undefined') {\r\n    cornerRadius = 0;\r\n  }\r\n\r\n  if (!vm.horizontal) {\r\n    // bar\r\n    left = vm.x - vm.width / 2;\r\n    right = vm.x + vm.width / 2;\r\n    top = vm.y;\r\n    bottom = vm.base;\r\n    signX = 1;\r\n    signY = bottom > top ? 1 : -1;\r\n    borderSkipped = vm.borderSkipped || 'bottom';\r\n  } else {\r\n    // horizontal bar\r\n    left = vm.base;\r\n    right = vm.x;\r\n    top = vm.y - vm.height / 2;\r\n    bottom = vm.y + vm.height / 2;\r\n    signX = right > left ? 1 : -1;\r\n    signY = 1;\r\n    borderSkipped = vm.borderSkipped || 'left';\r\n  }\r\n\r\n  // Canvas doesn't allow us to stroke inside the width so we can\r\n  // adjust the sizes to fit if we're setting a stroke on the line\r\n  if (borderWidth) {\r\n    // borderWidth shold be less than bar width and bar height.\r\n    const barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\r\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\r\n    const halfStroke = borderWidth / 2;\r\n    // Adjust borderWidth when bar top position is near vm.base(zero).\r\n    const borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\r\n    const borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\r\n    const borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\r\n    const borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\r\n    // not become a vertical line?\r\n    if (borderLeft !== borderRight) {\r\n      top = borderTop;\r\n      bottom = borderBottom;\r\n    }\r\n    // not become a horizontal line?\r\n    if (borderTop !== borderBottom) {\r\n      left = borderLeft;\r\n      right = borderRight;\r\n    }\r\n  }\r\n\r\n  ctx.beginPath();\r\n  ctx.fillStyle = vm.backgroundColor;\r\n  ctx.strokeStyle = vm.borderColor;\r\n  ctx.lineWidth = borderWidth;\r\n\r\n  // Corner points, from bottom-left to bottom-right clockwise\r\n  // | 1 2 |\r\n  // | 0 3 |\r\n  const corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\r\n\r\n  // Find first (starting) corner with fallback to 'bottom'\r\n  const borders = ['bottom', 'left', 'top', 'right'];\r\n  let startCorner = borders.indexOf(borderSkipped, 0);\r\n  if (startCorner === -1) {\r\n    startCorner = 0;\r\n  }\r\n\r\n  function cornerAt(index) {\r\n    return corners[(startCorner + index) % 4];\r\n  }\r\n\r\n  // Draw rectangle from 'startCorner'\r\n  let corner = cornerAt(0);\r\n  ctx.moveTo(corner[0], corner[1]);\r\n\r\n  for (let i = 1; i < 4; i += 1) {\r\n    corner = cornerAt(i);\r\n    let nextCornerId = i + 1;\r\n    if (nextCornerId === 4) {\r\n      nextCornerId = 0;\r\n    }\r\n\r\n    const width = corners[2][0] - corners[1][0];\r\n    const height = corners[0][1] - corners[1][1];\r\n    const x = corners[1][0];\r\n    const y = corners[1][1];\r\n\r\n    radius = cornerRadius;\r\n    // Fix radius being too large\r\n    if (radius > Math.abs(height) / 2) {\r\n      radius = Math.floor(Math.abs(height) / 2);\r\n    }\r\n    if (radius > Math.abs(width) / 2) {\r\n      radius = Math.floor(Math.abs(width) / 2);\r\n    }\r\n\r\n    if (height < 0) {\r\n      // Negative values in a standard bar chart\r\n      const xTl = x;\r\n      const xTr = x + width;\r\n      const yTl = y + height;\r\n      const yTr = y + height;\r\n\r\n      const xBl = x;\r\n      const xBr = x + width;\r\n      const yBl = y;\r\n      const yBr = y;\r\n\r\n      // Draw\r\n      ctx.moveTo(xBl + radius, yBl);\r\n      ctx.lineTo(xBr - radius, yBr);\r\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\r\n      ctx.lineTo(xTr, yTr + radius);\r\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\r\n      ctx.lineTo(xTl + radius, yTl);\r\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\r\n      ctx.lineTo(xBl, yBl - radius);\r\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\r\n    } else if (width < 0) {\r\n      // Negative values in a horizontal bar chart\r\n      const xTl = x + width;\r\n      const xTr = x;\r\n      const yTl = y;\r\n      const yTr = y;\r\n\r\n      const xBl = x + width;\r\n      const xBr = x;\r\n      const yBl = y + height;\r\n      const yBr = y + height;\r\n\r\n      // Draw\r\n      ctx.moveTo(xBl + radius, yBl);\r\n      ctx.lineTo(xBr - radius, yBr);\r\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\r\n      ctx.lineTo(xTr, yTr + radius);\r\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\r\n      ctx.lineTo(xTl + radius, yTl);\r\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\r\n      ctx.lineTo(xBl, yBl - radius);\r\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\r\n    } else {\r\n      // Positive Value\r\n      ctx.moveTo(x + radius, y);\r\n      ctx.lineTo(x + width - radius, y);\r\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n      ctx.lineTo(x + width, y + height - radius);\r\n      ctx.quadraticCurveTo(\r\n        x + width,\r\n        y + height,\r\n        x + width - radius,\r\n        y + height\r\n      );\r\n      ctx.lineTo(x + radius, y + height);\r\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n      ctx.lineTo(x, y + radius);\r\n      ctx.quadraticCurveTo(x, y, x + radius, y);\r\n    }\r\n  }\r\n\r\n  ctx.fill();\r\n  if (borderWidth) {\r\n    ctx.stroke();\r\n  }\r\n}\r\n\r\nChart.helpers.extend(Chart.elements.Rectangle.prototype, {\r\n  draw\r\n});\r\n","import { createMuiTheme, colors } from '@material-ui/core';\r\nimport shadows from './shadows';\r\nimport typography from './typography';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    background: {\r\n      default: '#F4F6F8',\r\n      paper: colors.common.white\r\n    },\r\n    primary: {\r\n      contrastText: '#ffffff',\r\n      main: '#5664d2'\r\n    },\r\n    text: {\r\n      primary: '#172b4d',\r\n      secondary: '#6b778c'\r\n    }\r\n  },\r\n  shadows,\r\n  typography\r\n});\r\n\r\nexport default theme;\r\n","export default [\r\n  'none',\r\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\r\n];\r\n","export default {\r\n  h1: {\r\n    fontWeight: 500,\r\n    fontSize: 35,\r\n    letterSpacing: '-0.24px'\r\n  },\r\n  h2: {\r\n    fontWeight: 500,\r\n    fontSize: 29,\r\n    letterSpacing: '-0.24px'\r\n  },\r\n  h3: {\r\n    fontWeight: 500,\r\n    fontSize: 24,\r\n    letterSpacing: '-0.06px'\r\n  },\r\n  h4: {\r\n    fontWeight: 500,\r\n    fontSize: 20,\r\n    letterSpacing: '-0.06px'\r\n  },\r\n  h5: {\r\n    fontWeight: 500,\r\n    fontSize: 16,\r\n    letterSpacing: '-0.05px'\r\n  },\r\n  h6: {\r\n    fontWeight: 500,\r\n    fontSize: 14,\r\n    letterSpacing: '-0.05px'\r\n  },\r\n  overline: {\r\n    fontWeight: 500\r\n  }\r\n};\r\n","const Logo = (props) => (\r\n  <img\r\n    alt=\"Logo\"\r\n    src=\"/static/logo.svg\"\r\n    {...props}\r\n  />\r\n);\r\n\r\nexport default Logo;\r\n","import { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom'; // material-ui Link \r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  AppBar,\r\n  Badge,\r\n  Box,\r\n  Hidden,\r\n  IconButton,\r\n  Toolbar\r\n} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\r\nimport InputIcon from '@material-ui/icons/Input';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Logo from './Logo';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n    color: \"#FFF\",\r\n    backgroundColor: \"#5F9EA0\"\r\n  }\r\n})\r\n\r\n\r\nconst DashboardNavbar = ({ onMobileNavOpen, ...rest }) => {\r\n  const [notifications] = useState([]);\r\n  const classes = useStyles()\r\n\r\n  console.log(rest)\r\n  return (\r\n    <AppBar\r\n      elevation={0}\r\n      {...rest}\r\n    >\r\n      <Toolbar className={classes.root}>\r\n        <RouterLink to=\"/\">\r\n          <Logo />\r\n        </RouterLink>\r\n        <Box sx={{ flexGrow: 1 }} />\r\n        <Hidden lgDown>\r\n          <IconButton color=\"inherit\">\r\n            <Badge\r\n              badgeContent={notifications.length}\r\n              color=\"primary\"\r\n              variant=\"dot\"\r\n            >\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n          <IconButton color=\"inherit\">\r\n            <RouterLink to=\"/login\">\r\n              <InputIcon />\r\n            </RouterLink>\r\n          </IconButton>\r\n        </Hidden>\r\n        <Hidden lgUp>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            onClick={onMobileNavOpen}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n        </Hidden>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nDashboardNavbar.propTypes = {\r\n  onMobileNavOpen: PropTypes.func\r\n};\r\n\r\nexport default DashboardNavbar;\r\n","import {\r\n  NavLink as RouterLink,\r\n  matchPath,\r\n  useLocation\r\n} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, ListItem } from '@material-ui/core';\r\n\r\nconst NavItem = ({\r\n  href,\r\n  icon: Icon,\r\n  title,\r\n  ...rest\r\n}) => {\r\n  const location = useLocation();\r\n\r\n  const active = href ? !!matchPath({\r\n    path: href,\r\n    end: false\r\n  }, location.pathname) : false;\r\n\r\n  return (\r\n    <ListItem\r\n      disableGutters\r\n      sx={{\r\n        display: 'flex',\r\n        py: 0\r\n      }}\r\n      {...rest}\r\n    >\r\n      <Button\r\n        component={RouterLink}\r\n        sx={{\r\n          color: 'text.secondary',\r\n          fontWeight: 'medium',\r\n          justifyContent: 'flex-start',\r\n          letterSpacing: 0,\r\n          py: 1.25,\r\n          textTransform: 'none',\r\n          width: '100%',\r\n          ...(active && {\r\n            color: 'primary.main'\r\n          }),\r\n          '& svg': {\r\n            mr: 1\r\n          }\r\n        }}\r\n        to={href}\r\n      >\r\n        {Icon && (\r\n          <Icon size=\"20\" />\r\n        )}\r\n        <span>\r\n          {title}\r\n        </span>\r\n      </Button>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nNavItem.propTypes = {\r\n  href: PropTypes.string,\r\n  icon: PropTypes.elementType,\r\n  title: PropTypes.string\r\n};\r\n\r\nexport default NavItem;\r\n","import React, { useEffect } from 'react';\r\nimport { Link as RouterLink, Route, useLocation } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  Drawer,\r\n  Hidden,\r\n  List,\r\n  Typography,\r\n  ListItem\r\n} from '@material-ui/core';\r\nimport {\r\n  AlertCircle as AlertCircleIcon,\r\n  BarChart as BarChartIcon,\r\n  Lock as LockIcon,\r\n  // Settings as SettingsIcon,\r\n  // ShoppingBag as ShoppingBagIcon,\r\n  User as UserIcon,\r\n  UserPlus as UserPlusIcon,\r\n  // Users as UsersIcon,\r\n  Tag as TagIcon,\r\n  Truck as TruckIcon\r\n} from 'react-feather';\r\nimport NavItem from './NavItem';\r\n\r\nconst user = {\r\n  avatar: '/static/images/avatars/main.png',\r\n  jobTitle: '製造部',\r\n  name: '潮田 正人'\r\n};\r\n\r\nconst items = [\r\n  {\r\n    method: 'Link',\r\n    href: '/additional',\r\n    icon: TagIcon,\r\n    title: '追加依頼'\r\n  },\r\n  // {\r\n  //   href: '/invoice',\r\n  //   icon: TruckIcon,\r\n  //   title: '送状生成'\r\n  // },\r\n  {\r\n    method: 'a',\r\n    href: 'https://bmypage.kuronekoyamato.co.jp/bmypage/servlet/jp.co.kuronekoyamato.wur.hmp.servlet.user.HMPLGI0010JspServlet',\r\n    icon: TruckIcon,\r\n    title: 'ヤマトB2ログイン',\r\n    target: 'blank'\r\n  },\r\n  {\r\n    method: 'Link',\r\n    href: '/app/dashboard',\r\n    icon: BarChartIcon,\r\n    title: 'ダッシュボード'\r\n  },\r\n  // {\r\n  //   href: '/app/customers',\r\n  //   icon: UsersIcon,\r\n  //   title: 'Customers'\r\n  // },\r\n  // {\r\n  //   href: '/app/products',\r\n  //   icon: ShoppingBagIcon,\r\n  //   title: 'Products'\r\n  // },\r\n  {\r\n    method: 'Link',\r\n    href: '/app/account',\r\n    icon: UserIcon,\r\n    title: 'アカウント'\r\n  },\r\n  // {\r\n  //   href: '/app/settings',\r\n  //   icon: SettingsIcon,\r\n  //   title: 'Settings'\r\n  // },\r\n  {\r\n    method: 'Link',\r\n    href: '/login',\r\n    icon: LockIcon,\r\n    title: 'ログイン'\r\n  },\r\n  {\r\n    method: 'Link',\r\n    href: '/register',\r\n    icon: UserPlusIcon,\r\n    title: 'アカウント登録'\r\n  },\r\n  {\r\n    method: 'Link',\r\n    href: '/404',\r\n    icon: AlertCircleIcon,\r\n    title: 'Error'\r\n  }\r\n];\r\n\r\nconst DashboardSidebar = ({ onMobileClose, openMobile }) => {\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    if (openMobile && onMobileClose) {\r\n      onMobileClose();\r\n    }\r\n  }, [location.pathname]);\r\n\r\n  // useEffect(() => {\r\n  //   if (openMobile && onMobileClose) {\r\n  //     onMobileClose();\r\n  //   }\r\n  // }, []);\r\n\r\n  const content = (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        height: '100%'\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          alignItems: 'center',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          p: 2\r\n        }}\r\n      >\r\n        <Avatar\r\n          component={RouterLink}\r\n          src={user.avatar}\r\n          sx={{\r\n            cursor: 'pointer',\r\n            width: 64,\r\n            height: 64\r\n          }}\r\n          to=\"/app/account\"\r\n        />\r\n        <Typography\r\n          color=\"textPrimary\"\r\n          variant=\"h5\"\r\n        >\r\n          {user.name}\r\n        </Typography>\r\n        <Typography\r\n          color=\"textSecondary\"\r\n          variant=\"body2\"\r\n        >\r\n          {user.jobTitle}\r\n        </Typography>\r\n      </Box>\r\n      <Divider />\r\n      <Box sx={{ p: 2 }}>\r\n        <List>\r\n          {items.map((item) => {\r\n            return (\r\n              item.method === \"Link\" ?\r\n                <NavItem\r\n                  href={item.href}\r\n                  key={item.title}\r\n                  title={item.title}\r\n                  icon={item.icon}\r\n                />\r\n                :\r\n                <a\r\n                  href={item.href}\r\n                  target={item.target}\r\n                >\r\n                  {item.title}\r\n                </a>\r\n            )\r\n          })}\r\n        </List>\r\n      </Box>\r\n    </Box >\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Hidden lgUp>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          onClose={onMobileClose}\r\n          open={openMobile}\r\n          variant=\"temporary\"\r\n          PaperProps={{\r\n            sx: {\r\n              width: 256\r\n            }\r\n          }}\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden lgDown>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          open\r\n          variant=\"persistent\"\r\n          PaperProps={{\r\n            sx: {\r\n              width: 256,\r\n              top: 64,\r\n              height: 'calc(100% - 64px)'\r\n            }\r\n          }}\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n    </>\r\n  );\r\n};\r\n\r\nDashboardSidebar.propTypes = {\r\n  onMobileClose: PropTypes.func,\r\n  openMobile: PropTypes.bool\r\n};\r\n\r\nDashboardSidebar.defaultProps = {\r\n  onMobileClose: () => { },\r\n  openMobile: false\r\n};\r\n\r\nexport default DashboardSidebar;\r\n","import { useState } from 'react';\r\nimport { Outlet } from 'react-router-dom';\r\nimport { experimentalStyled } from '@material-ui/core';\r\nimport DashboardNavbar from './DashboardNavbar';\r\nimport DashboardSidebar from './DashboardSidebar';\r\n\r\nconst DashboardLayoutRoot = experimentalStyled('div')(\r\n  ({ theme }) => ({\r\n    backgroundColor: theme.palette.background.default,\r\n    display: 'flex',\r\n    height: '100%',\r\n    overflow: 'hidden',\r\n    width: '100%'\r\n  })\r\n);\r\n\r\nconst DashboardLayoutWrapper = experimentalStyled('div')(\r\n  ({ theme }) => ({\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden',\r\n    paddingTop: 64,\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingLeft: 256\r\n    }\r\n  })\r\n);\r\n\r\nconst DashboardLayoutContainer = experimentalStyled('div')({\r\n  display: 'flex',\r\n  flex: '1 1 auto',\r\n  overflow: 'hidden'\r\n});\r\n\r\nconst DashboardLayoutContent = experimentalStyled('div')({\r\n  flex: '1 1 auto',\r\n  height: '100%',\r\n  overflow: 'auto'\r\n});\r\n\r\nconst DashboardLayout = () => {\r\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\r\n\r\n  return (\r\n    <DashboardLayoutRoot>\r\n      <DashboardNavbar onMobileNavOpen={() => setMobileNavOpen(true)} />\r\n      <DashboardSidebar\r\n        onMobileClose={() => setMobileNavOpen(false)}\r\n        openMobile={isMobileNavOpen}\r\n      />\r\n      <DashboardLayoutWrapper>\r\n        <DashboardLayoutContainer>\r\n          <DashboardLayoutContent>\r\n            <Outlet />\r\n          </DashboardLayoutContent>\r\n        </DashboardLayoutContainer>\r\n      </DashboardLayoutWrapper>\r\n    </DashboardLayoutRoot>\r\n  );\r\n};\r\n\r\nexport default DashboardLayout;\r\n","import { Outlet } from 'react-router-dom';\r\nimport { experimentalStyled } from '@material-ui/core';\r\n// import MainNavbar from './MainNavbar';\r\nimport DashboardNavbar from './DashboardNavbar'\r\n\r\nconst MainLayoutRoot = experimentalStyled('div')(\r\n  ({ theme }) => ({\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: 'flex',\r\n    height: '100%',\r\n    overflow: 'hidden',\r\n    width: '100%'\r\n  })\r\n);\r\n\r\nconst MainLayoutWrapper = experimentalStyled('div')({\r\n  display: 'flex',\r\n  flex: '1 1 auto',\r\n  overflow: 'hidden',\r\n  paddingTop: 64\r\n});\r\n\r\nconst MainLayoutContainer = experimentalStyled('div')({\r\n  display: 'flex',\r\n  flex: '1 1 auto',\r\n  overflow: 'hidden'\r\n});\r\n\r\nconst MainLayoutContent = experimentalStyled('div')({\r\n  flex: '1 1 auto',\r\n  height: '100%',\r\n  overflow: 'auto'\r\n});\r\n\r\nconst MainLayout = () => (\r\n  <MainLayoutRoot>\r\n    <DashboardNavbar props={[\"test\", \"test2\"]} />\r\n    <MainLayoutWrapper>\r\n      <MainLayoutContainer>\r\n        <MainLayoutContent>\r\n          <Outlet />\r\n        </MainLayoutContent>\r\n      </MainLayoutContainer>\r\n    </MainLayoutWrapper>\r\n  </MainLayoutRoot>\r\n);\r\n\r\nexport default MainLayout;\r\n","import moment from 'moment';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Divider,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nconst user = {\r\n  avatar: '/static/images/avatars/main.png',\r\n  city: 'つくばし',\r\n  country: '日本',\r\n  jobTitle: '製造部',\r\n  name: '潮田 正人',\r\n  timezone: 'GTM-7'\r\n};\r\n\r\nconst AccountProfile = (props) => (\r\n  <Card {...props}>\r\n    <CardContent>\r\n      <Box\r\n        sx={{\r\n          alignItems: 'center',\r\n          display: 'flex',\r\n          flexDirection: 'column'\r\n        }}\r\n      >\r\n        <Avatar\r\n          src={user.avatar}\r\n          sx={{\r\n            height: 100,\r\n            width: 100\r\n          }}\r\n        />\r\n        <Typography\r\n          color=\"textPrimary\"\r\n          gutterBottom\r\n          variant=\"h3\"\r\n        >\r\n          {user.name}\r\n        </Typography>\r\n        <Typography\r\n          color=\"textSecondary\"\r\n          variant=\"body1\"\r\n        >\r\n          {`${user.city} ${user.country}`}\r\n        </Typography>\r\n        <Typography\r\n          color=\"textSecondary\"\r\n          variant=\"body1\"\r\n        >\r\n          {`${moment().format('hh:mm A')} ${user.timezone}`}\r\n        </Typography>\r\n      </Box>\r\n    </CardContent>\r\n    <Divider />\r\n    <CardActions>\r\n      <Button\r\n        color=\"primary\"\r\n        fullWidth\r\n        variant=\"text\"\r\n      >\r\n        プロフィール画像変更\r\n      </Button>\r\n    </CardActions>\r\n  </Card>\r\n);\r\n\r\nexport default AccountProfile;\r\n","import { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Grid,\r\n  TextField\r\n} from '@material-ui/core';\r\n\r\nconst states = [\r\n  {\r\n    value: '100',\r\n    label: '茨城工場'\r\n  },\r\n  {\r\n    value: '600',\r\n    label: '本社'\r\n  },\r\n  {\r\n    value: '150',\r\n    label: '東北工場'\r\n  }\r\n];\r\n\r\nconst initialProf = {\r\n  userName: '潮田 正人',\r\n  userNameShort: '潮田',\r\n  email: 'ushioda.m@i-makes.com',\r\n  phone: '112233',\r\n  base: '茨城工場',\r\n  section: '製造部'\r\n}\r\nconst AccountProfileDetails = (props) => {\r\n  const [values, setValues] = useState(initialProf);\r\n\r\n  const handleChange = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form\r\n      autoComplete=\"off\"\r\n      noValidate\r\n      {...props}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n          subheader=\"プロフィールの変更\"\r\n          title=\"ユーザ情報\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                helperText=\"Please specify the first name\"\r\n                label=\"名前\"\r\n                name=\"userName\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.userName}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"短縮名\"\r\n                name=\"userNameShort\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.userNameShort}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"メールアドレス\"\r\n                name=\"email\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.email}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"携帯電話番号\"\r\n                name=\"phone\"\r\n                onChange={handleChange}\r\n                type=\"number\"\r\n                value={values.phone}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"部署名\"\r\n                name=\"section\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.section}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"拠点名\"\r\n                name=\"base\"\r\n                onChange={handleChange}\r\n                required\r\n                select\r\n                SelectProps={{ native: true }}\r\n                value={values.state}\r\n                variant=\"outlined\"\r\n              >\r\n                {states.map((option) => (\r\n                  <option\r\n                    key={option.value}\r\n                    value={option.value}\r\n                  >\r\n                    {option.label}\r\n                  </option>\r\n                ))}\r\n              </TextField>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            justifyContent: 'flex-end',\r\n            p: 2\r\n          }}\r\n        >\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            登録\r\n          </Button>\r\n        </Box>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AccountProfileDetails;\r\n","import { Helmet } from 'react-helmet';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Grid\r\n} from '@material-ui/core';\r\nimport AccountProfile from 'src/components/account/AccountProfile';\r\nimport AccountProfileDetails from 'src/components/account/AccountProfileDetails';\r\n\r\nconst Account = () => (\r\n  <>\r\n    <Helmet>\r\n      <title>Account | 生産管理 </title>\r\n    </Helmet>\r\n    <Box\r\n      sx={{\r\n        backgroundColor: 'background.default',\r\n        minHeight: '100%',\r\n        py: 3\r\n      }}\r\n    >\r\n      <Container maxWidth=\"lg\">\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n        >\r\n          <Grid\r\n            item\r\n            lg={4}\r\n            md={6}\r\n            xs={12}\r\n          >\r\n            <AccountProfile />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={8}\r\n            md={6}\r\n            xs={12}\r\n          >\r\n            <AccountProfileDetails />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  </>\r\n);\r\n\r\nexport default Account;\r\n","import {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport MoneyIcon from '@material-ui/icons/Money';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nconst Budget = (props) => (\r\n  <Card\r\n    sx={{ height: '100%' }}\r\n    {...props}\r\n  >\r\n    <CardContent>\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        sx={{ justifyContent: 'space-between' }}\r\n      >\r\n        <Grid item>\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            gutterBottom\r\n            variant=\"h6\"\r\n          >\r\n            BUDGET\r\n          </Typography>\r\n          <Typography\r\n            color=\"textPrimary\"\r\n            variant=\"h3\"\r\n          >\r\n            $24,000\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Avatar\r\n            sx={{\r\n              backgroundColor: red[600],\r\n              height: 56,\r\n              width: 56\r\n            }}\r\n          >\r\n            <MoneyIcon />\r\n          </Avatar>\r\n        </Grid>\r\n      </Grid>\r\n      <Box\r\n        sx={{\r\n          pt: 2,\r\n          display: 'flex',\r\n          alignItems: 'center'\r\n        }}\r\n      >\r\n        <ArrowDownwardIcon sx={{ color: red[900] }} />\r\n        <Typography\r\n          sx={{\r\n            color: red[900],\r\n            mr: 1\r\n          }}\r\n          variant=\"body2\"\r\n        >\r\n          12%\r\n        </Typography>\r\n        <Typography\r\n          color=\"textSecondary\"\r\n          variant=\"caption\"\r\n        >\r\n          Since last month\r\n        </Typography>\r\n      </Box>\r\n    </CardContent>\r\n  </Card>\r\n);\r\n\r\nexport default Budget;\r\n","import moment from 'moment';\r\nimport { v4 as uuid } from 'uuid';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  Chip,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TableSortLabel,\r\n  Tooltip\r\n} from '@material-ui/core';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\n\r\nconst orders = [\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1049',\r\n    amount: 30.5,\r\n    customer: {\r\n      name: 'Ekaterina Tankova'\r\n    },\r\n    createdAt: 1555016400000,\r\n    status: 'pending'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1048',\r\n    amount: 25.1,\r\n    customer: {\r\n      name: 'Cao Yu'\r\n    },\r\n    createdAt: 1555016400000,\r\n    status: 'delivered'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1047',\r\n    amount: 10.99,\r\n    customer: {\r\n      name: 'Alexa Richardson'\r\n    },\r\n    createdAt: 1554930000000,\r\n    status: 'refunded'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1046',\r\n    amount: 96.43,\r\n    customer: {\r\n      name: 'Anje Keizer'\r\n    },\r\n    createdAt: 1554757200000,\r\n    status: 'pending'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1045',\r\n    amount: 32.54,\r\n    customer: {\r\n      name: 'Clarke Gillebert'\r\n    },\r\n    createdAt: 1554670800000,\r\n    status: 'delivered'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1044',\r\n    amount: 16.76,\r\n    customer: {\r\n      name: 'Adam Denisov'\r\n    },\r\n    createdAt: 1554670800000,\r\n    status: 'delivered'\r\n  }\r\n];\r\n\r\nconst LatestOrders = (props) => (\r\n  <Card {...props}>\r\n    <CardHeader title=\"Latest Orders\" />\r\n    <Divider />\r\n    <PerfectScrollbar>\r\n      <Box sx={{ minWidth: 800 }}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                Order Ref\r\n              </TableCell>\r\n              <TableCell>\r\n                Customer\r\n              </TableCell>\r\n              <TableCell sortDirection=\"desc\">\r\n                <Tooltip\r\n                  enterDelay={300}\r\n                  title=\"Sort\"\r\n                >\r\n                  <TableSortLabel\r\n                    active\r\n                    direction=\"desc\"\r\n                  >\r\n                    Date\r\n                  </TableSortLabel>\r\n                </Tooltip>\r\n              </TableCell>\r\n              <TableCell>\r\n                Status\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {orders.map((order) => (\r\n              <TableRow\r\n                hover\r\n                key={order.id}\r\n              >\r\n                <TableCell>\r\n                  {order.ref}\r\n                </TableCell>\r\n                <TableCell>\r\n                  {order.customer.name}\r\n                </TableCell>\r\n                <TableCell>\r\n                  {moment(order.createdAt).format('DD/MM/YYYY')}\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Chip\r\n                    color=\"primary\"\r\n                    label={order.status}\r\n                    size=\"small\"\r\n                  />\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Box>\r\n    </PerfectScrollbar>\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n        p: 2\r\n      }}\r\n    >\r\n      <Button\r\n        color=\"primary\"\r\n        endIcon={<ArrowRightIcon />}\r\n        size=\"small\"\r\n        variant=\"text\"\r\n      >\r\n        View all\r\n      </Button>\r\n    </Box>\r\n  </Card>\r\n);\r\n\r\nexport default LatestOrders;\r\n","import { v4 as uuid } from 'uuid';\r\nimport moment from 'moment';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText\r\n} from '@material-ui/core';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\n\r\nconst products = [\r\n  {\r\n    id: uuid(),\r\n    name: 'Dropbox',\r\n    imageUrl: '/static/images/products/product_1.png',\r\n    updatedAt: moment().subtract(2, 'hours')\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'Medium Corporation',\r\n    imageUrl: '/static/images/products/product_2.png',\r\n    updatedAt: moment().subtract(2, 'hours')\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'Slack',\r\n    imageUrl: '/static/images/products/product_3.png',\r\n    updatedAt: moment().subtract(3, 'hours')\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'Lyft',\r\n    imageUrl: '/static/images/products/product_4.png',\r\n    updatedAt: moment().subtract(5, 'hours')\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'GitHub',\r\n    imageUrl: '/static/images/products/product_5.png',\r\n    updatedAt: moment().subtract(9, 'hours')\r\n  }\r\n];\r\n\r\nconst LatestProducts = (props) => (\r\n  <Card {...props}>\r\n    <CardHeader\r\n      subtitle={`${products.length} in total`}\r\n      title=\"Latest Products\"\r\n    />\r\n    <Divider />\r\n    <List>\r\n      {products.map((product, i) => (\r\n        <ListItem\r\n          divider={i < products.length - 1}\r\n          key={product.id}\r\n        >\r\n          <ListItemAvatar>\r\n            <img\r\n              alt={product.name}\r\n              src={product.imageUrl}\r\n              style={{\r\n                height: 48,\r\n                width: 48\r\n              }}\r\n            />\r\n          </ListItemAvatar>\r\n          <ListItemText\r\n            primary={product.name}\r\n            secondary={`Updated ${product.updatedAt.fromNow()}`}\r\n          />\r\n          <IconButton\r\n            edge=\"end\"\r\n            size=\"small\"\r\n          >\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </ListItem>\r\n      ))}\r\n    </List>\r\n    <Divider />\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n        p: 2\r\n      }}\r\n    >\r\n      <Button\r\n        color=\"primary\"\r\n        endIcon={<ArrowRightIcon />}\r\n        size=\"small\"\r\n        variant=\"text\"\r\n      >\r\n        View all\r\n      </Button>\r\n    </Box>\r\n  </Card>\r\n);\r\n\r\nexport default LatestProducts;\r\n","import { Bar } from 'react-chartjs-2';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  useTheme,\r\n  colors\r\n} from '@material-ui/core';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\n\r\nconst Sales = (props) => {\r\n  const theme = useTheme();\r\n\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        backgroundColor: colors.indigo[500],\r\n        data: [18, 5, 19, 27, 29, 19, 20],\r\n        label: 'This year'\r\n      },\r\n      {\r\n        backgroundColor: colors.grey[200],\r\n        data: [11, 20, 12, 29, 30, 25, 13],\r\n        label: 'Last year'\r\n      }\r\n    ],\r\n    labels: ['1 Aug', '2 Aug', '3 Aug', '4 Aug', '5 Aug', '6 Aug']\r\n  };\r\n\r\n  const options = {\r\n    animation: false,\r\n    cornerRadius: 20,\r\n    layout: { padding: 0 },\r\n    legend: { display: false },\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          barThickness: 12,\r\n          maxBarThickness: 10,\r\n          barPercentage: 0.5,\r\n          categoryPercentage: 0.5,\r\n          ticks: {\r\n            fontColor: theme.palette.text.secondary\r\n          },\r\n          gridLines: {\r\n            display: false,\r\n            drawBorder: false\r\n          }\r\n        }\r\n      ],\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            fontColor: theme.palette.text.secondary,\r\n            beginAtZero: true,\r\n            min: 0\r\n          },\r\n          gridLines: {\r\n            borderDash: [2],\r\n            borderDashOffset: [2],\r\n            color: theme.palette.divider,\r\n            drawBorder: false,\r\n            zeroLineBorderDash: [2],\r\n            zeroLineBorderDashOffset: [2],\r\n            zeroLineColor: theme.palette.divider\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    tooltips: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      bodyFontColor: theme.palette.text.secondary,\r\n      borderColor: theme.palette.divider,\r\n      borderWidth: 1,\r\n      enabled: true,\r\n      footerFontColor: theme.palette.text.secondary,\r\n      intersect: false,\r\n      mode: 'index',\r\n      titleFontColor: theme.palette.text.primary\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card {...props}>\r\n      <CardHeader\r\n        action={(\r\n          <Button\r\n            endIcon={<ArrowDropDownIcon />}\r\n            size=\"small\"\r\n            variant=\"text\"\r\n          >\r\n            Last 7 days\r\n          </Button>\r\n        )}\r\n        title=\"Latest Sales\"\r\n      />\r\n      <Divider />\r\n      <CardContent>\r\n        <Box\r\n          sx={{\r\n            height: 400,\r\n            position: 'relative'\r\n          }}\r\n        >\r\n          <Bar\r\n            data={data}\r\n            options={options}\r\n          />\r\n        </Box>\r\n      </CardContent>\r\n      <Divider />\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          justifyContent: 'flex-end',\r\n          p: 2\r\n        }}\r\n      >\r\n        <Button\r\n          color=\"primary\"\r\n          endIcon={<ArrowRightIcon />}\r\n          size=\"small\"\r\n          variant=\"text\"\r\n        >\r\n          Overview\r\n        </Button>\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Sales;\r\n","import {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  LinearProgress,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport { orange } from '@material-ui/core/colors';\r\nimport InsertChartIcon from '@material-ui/icons/InsertChartOutlined';\r\n\r\nconst TasksProgress = (props) => (\r\n  <Card\r\n    sx={{ height: '100%' }}\r\n    {...props}\r\n  >\r\n    <CardContent>\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        sx={{ justifyContent: 'space-between' }}\r\n      >\r\n        <Grid item>\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            gutterBottom\r\n            variant=\"h6\"\r\n          >\r\n            TASKS PROGRESS\r\n          </Typography>\r\n          <Typography\r\n            color=\"textPrimary\"\r\n            variant=\"h3\"\r\n          >\r\n            75.5%\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Avatar\r\n            sx={{\r\n              backgroundColor: orange[600],\r\n              height: 56,\r\n              width: 56\r\n            }}\r\n          >\r\n            <InsertChartIcon />\r\n          </Avatar>\r\n        </Grid>\r\n      </Grid>\r\n      <Box sx={{ pt: 3 }}>\r\n        <LinearProgress\r\n          value={75.5}\r\n          variant=\"determinate\"\r\n        />\r\n      </Box>\r\n    </CardContent>\r\n  </Card>\r\n);\r\n\r\nexport default TasksProgress;\r\n","import {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport { green } from '@material-ui/core/colors';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport PeopleIcon from '@material-ui/icons/PeopleOutlined';\r\n\r\nconst TotalCustomers = (props) => (\r\n  <Card {...props}>\r\n    <CardContent>\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        sx={{ justifyContent: 'space-between' }}\r\n      >\r\n        <Grid item>\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            gutterBottom\r\n            variant=\"h6\"\r\n          >\r\n            TOTAL CUSTOMERS\r\n          </Typography>\r\n          <Typography\r\n            color=\"textPrimary\"\r\n            variant=\"h3\"\r\n          >\r\n            1,600\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Avatar\r\n            sx={{\r\n              backgroundColor: green[600],\r\n              height: 56,\r\n              width: 56\r\n            }}\r\n          >\r\n            <PeopleIcon />\r\n          </Avatar>\r\n        </Grid>\r\n      </Grid>\r\n      <Box\r\n        sx={{\r\n          alignItems: 'center',\r\n          display: 'flex',\r\n          pt: 2\r\n        }}\r\n      >\r\n        <ArrowUpwardIcon sx={{ color: green[900] }} />\r\n        <Typography\r\n          variant=\"body2\"\r\n          sx={{\r\n            color: green[900],\r\n            mr: 1\r\n          }}\r\n        >\r\n          16%\r\n        </Typography>\r\n        <Typography\r\n          color=\"textSecondary\"\r\n          variant=\"caption\"\r\n        >\r\n          Since last month\r\n        </Typography>\r\n      </Box>\r\n    </CardContent>\r\n  </Card>\r\n);\r\n\r\nexport default TotalCustomers;\r\n","import {\r\n  Avatar,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport { indigo } from '@material-ui/core/colors';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\n\r\nconst TotalProfit = (props) => (\r\n  <Card {...props}>\r\n    <CardContent>\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        sx={{ justifyContent: 'space-between' }}\r\n      >\r\n        <Grid item>\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            gutterBottom\r\n            variant=\"h6\"\r\n          >\r\n            TOTAL PROFIT\r\n          </Typography>\r\n          <Typography\r\n            color=\"textPrimary\"\r\n            variant=\"h3\"\r\n          >\r\n            $23,200\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Avatar\r\n            sx={{\r\n              backgroundColor: indigo[600],\r\n              height: 56,\r\n              width: 56\r\n            }}\r\n          >\r\n            <AttachMoneyIcon />\r\n          </Avatar>\r\n        </Grid>\r\n      </Grid>\r\n    </CardContent>\r\n  </Card>\r\n);\r\n\r\nexport default TotalProfit;\r\n","import { Doughnut } from 'react-chartjs-2';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Typography,\r\n  colors,\r\n  useTheme\r\n} from '@material-ui/core';\r\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport TabletIcon from '@material-ui/icons/Tablet';\r\n\r\nconst TrafficByDevice = (props) => {\r\n  const theme = useTheme();\r\n\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        data: [63, 15, 22],\r\n        backgroundColor: [\r\n          colors.indigo[500],\r\n          colors.red[600],\r\n          colors.orange[600]\r\n        ],\r\n        borderWidth: 8,\r\n        borderColor: colors.common.white,\r\n        hoverBorderColor: colors.common.white\r\n      }\r\n    ],\r\n    labels: ['Desktop', 'Tablet', 'Mobile']\r\n  };\r\n\r\n  const options = {\r\n    animation: false,\r\n    cutoutPercentage: 80,\r\n    layout: { padding: 0 },\r\n    legend: {\r\n      display: false\r\n    },\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n    tooltips: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      bodyFontColor: theme.palette.text.secondary,\r\n      borderColor: theme.palette.divider,\r\n      borderWidth: 1,\r\n      enabled: true,\r\n      footerFontColor: theme.palette.text.secondary,\r\n      intersect: false,\r\n      mode: 'index',\r\n      titleFontColor: theme.palette.text.primary\r\n    }\r\n  };\r\n\r\n  const devices = [\r\n    {\r\n      title: 'Desktop',\r\n      value: 63,\r\n      icon: LaptopMacIcon,\r\n      color: colors.indigo[500]\r\n    },\r\n    {\r\n      title: 'Tablet',\r\n      value: 15,\r\n      icon: TabletIcon,\r\n      color: colors.red[600]\r\n    },\r\n    {\r\n      title: 'Mobile',\r\n      value: 23,\r\n      icon: PhoneIcon,\r\n      color: colors.orange[600]\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Card {...props}>\r\n      <CardHeader title=\"Traffic by Device\" />\r\n      <Divider />\r\n      <CardContent>\r\n        <Box\r\n          sx={{\r\n            height: 300,\r\n            position: 'relative'\r\n          }}\r\n        >\r\n          <Doughnut\r\n            data={data}\r\n            options={options}\r\n          />\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            pt: 2\r\n          }}\r\n        >\r\n          {devices.map(({\r\n            color,\r\n            icon: Icon,\r\n            title,\r\n            value\r\n          }) => (\r\n            <Box\r\n              key={title}\r\n              sx={{\r\n                p: 1,\r\n                textAlign: 'center'\r\n              }}\r\n            >\r\n              <Icon color=\"action\" />\r\n              <Typography\r\n                color=\"textPrimary\"\r\n                variant=\"body1\"\r\n              >\r\n                {title}\r\n              </Typography>\r\n              <Typography\r\n                style={{ color }}\r\n                variant=\"h2\"\r\n              >\r\n                {value}\r\n                %\r\n              </Typography>\r\n            </Box>\r\n          ))}\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TrafficByDevice;\r\n","import { Helmet } from 'react-helmet';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Grid\r\n} from '@material-ui/core';\r\nimport Budget from 'src/components/dashboard//Budget';\r\nimport LatestOrders from 'src/components/dashboard//LatestOrders';\r\nimport LatestProducts from 'src/components/dashboard//LatestProducts';\r\nimport Sales from 'src/components/dashboard//Sales';\r\nimport TasksProgress from 'src/components/dashboard//TasksProgress';\r\nimport TotalCustomers from 'src/components/dashboard//TotalCustomers';\r\nimport TotalProfit from 'src/components/dashboard//TotalProfit';\r\nimport TrafficByDevice from 'src/components/dashboard//TrafficByDevice';\r\n\r\nconst Dashboard = () => (\r\n  <>\r\n    <Helmet>\r\n      <title>Main | 生産管理 </title>\r\n    </Helmet>\r\n    <Box\r\n      sx={{\r\n        backgroundColor: 'background.default',\r\n        minHeight: '100%',\r\n        py: 3\r\n      }}\r\n    >\r\n      <Container maxWidth={false}>\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n        >\r\n          <Grid\r\n            item\r\n            lg={3}\r\n            sm={6}\r\n            xl={3}\r\n            xs={12}\r\n          >\r\n            <Budget />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={3}\r\n            sm={6}\r\n            xl={3}\r\n            xs={12}\r\n          >\r\n            <TotalCustomers />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={3}\r\n            sm={6}\r\n            xl={3}\r\n            xs={12}\r\n          >\r\n            <TasksProgress />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={3}\r\n            sm={6}\r\n            xl={3}\r\n            xs={12}\r\n          >\r\n            <TotalProfit sx={{ height: '100%' }} />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={8}\r\n            md={12}\r\n            xl={9}\r\n            xs={12}\r\n          >\r\n            <Sales />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={4}\r\n            md={6}\r\n            xl={3}\r\n            xs={12}\r\n          >\r\n            <TrafficByDevice sx={{ height: '100%' }} />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={4}\r\n            md={6}\r\n            xl={3}\r\n            xs={12}\r\n          >\r\n            <LatestProducts sx={{ height: '100%' }} />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={8}\r\n            md={12}\r\n            xl={9}\r\n            xs={12}\r\n          >\r\n            <LatestOrders />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  </>\r\n);\r\n\r\nexport default Dashboard;\r\n","import React, { useState } from 'react'\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  // Grid,\r\n  Link,\r\n  TextField,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nimport Cookie from 'universal-cookie';\r\n\r\nconst cookie = new Cookie()\r\n\r\nconst Login = () => {\r\n  const navigate = useNavigate();\r\n  const [employee, setEmployee] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  // const onlogin = (e) => {\r\n  //   alert(employee + ':' + password)\r\n  // }\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      await fetch(\r\n        `http://127.0.0.1:8000/api/auth/jwt/create/`,\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify({ username: employee, password: password }),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      )\r\n        .then((res) => {\r\n          console.log(res)\r\n          if (res.status === 400) {\r\n            throw \"authentication failed\"\r\n          } else if (res.ok) {\r\n            return res.json()\r\n          }\r\n        })\r\n        .then((data) => {\r\n          const options = { path: \"/\" }\r\n          cookie.set(\"access_token\", data.access, options)\r\n        })\r\n      // router.push(\"/main-page\")\r\n    } catch (err) {\r\n      alert(err)\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Login | 生産管理 </title>\r\n      </Helmet>\r\n      <Box\r\n        sx={{\r\n          backgroundColor: 'background.default',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          height: '100%',\r\n          justifyContent: 'center'\r\n        }}\r\n      >\r\n        <Container maxWidth=\"sm\">\r\n          <Formik\r\n            initialValues={{\r\n              employee: '',\r\n              password: ''\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n              employee: Yup.string().min(4).required('社員番号を６文字以上で入力してください').max(255).required('社員番号を入力して下さい'),\r\n              password: Yup.string().max(255).required('パスワードを入力してください')\r\n            })}\r\n            onSubmit={() => {\r\n              navigate('/app/dashboard', { replace: true });\r\n            }}\r\n          >\r\n            {({\r\n              errors,\r\n              // handleBlur,\r\n              // handleChange,\r\n              handleSubmit,\r\n              isSubmitting,\r\n              touched,\r\n              values\r\n            }) => (\r\n              <form onSubmit={handleSubmit}>\r\n                <Box sx={{ mb: 3 }}>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    variant=\"h2\"\r\n                  >\r\n                    Login\r\n                  </Typography>\r\n                </Box>\r\n                <TextField\r\n                  error={Boolean(touched.employee && errors.employee)}\r\n                  fullWidth\r\n                  helperText={touched.employee && errors.employee}\r\n                  label=\"社員番号\"\r\n                  margin=\"normal\"\r\n                  name=\"employee\"\r\n                  // onBlur={handleBlur}\r\n                  // onChange={handleChange}\r\n                  onChange={(e) => setEmployee(e.target.value)}\r\n                  type=\"text\"\r\n                  value={values.employee}\r\n                  variant=\"outlined\"\r\n                // onChange={(e) => setEmployee(e.target.value)}\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.password && errors.password)}\r\n                  fullWidth\r\n                  helperText={touched.password && errors.password}\r\n                  label=\"パスワード\"\r\n                  margin=\"normal\"\r\n                  name=\"password\"\r\n                  // onBlur={handleBlur}\r\n                  // onChange={handleChange}\r\n                  type=\"password\"\r\n                  // value={values.password}\r\n                  variant=\"outlined\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                <Box sx={{ py: 2 }}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    disabled={isSubmitting}\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                  >\r\n                    ログイン\r\n                  </Button>\r\n                </Box>\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  variant=\"body1\"\r\n                >\r\n                  アカウント\r\n                  <Link\r\n                    component={RouterLink}\r\n                    to=\"/register\"\r\n                    variant=\"h5\"\r\n                  >\r\n                    登録はこちら\r\n                  </Link>\r\n                  から...\r\n                </Typography>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { Helmet } from 'react-helmet';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nconst NotFound = () => (\r\n  <>\r\n    <Helmet>\r\n      <title>404 | 生産管理 </title>\r\n    </Helmet>\r\n    <Box\r\n      sx={{\r\n        backgroundColor: 'background.default',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        height: '100%',\r\n        justifyContent: 'center'\r\n      }}\r\n    >\r\n      <Container maxWidth=\"md\">\r\n        <Typography\r\n          align=\"center\"\r\n          color=\"textPrimary\"\r\n          variant=\"h1\"\r\n        >\r\n          404: ページねーよ\r\n        </Typography>\r\n        <Typography\r\n          align=\"center\"\r\n          color=\"textPrimary\"\r\n          variant=\"subtitle2\"\r\n        >\r\n          {/* You either tried some shady route or you came here by mistake.\r\n          Whichever it is, try using the navigation */}\r\n        </Typography>\r\n        <Box sx={{ textAlign: 'center' }}>\r\n          <img\r\n            alt=\"Under development\"\r\n            src=\"/static/images/undraw_page_not_found_su7k.svg\"\r\n            style={{\r\n              marginTop: 50,\r\n              display: 'inline-block',\r\n              maxWidth: '100%',\r\n              width: 560\r\n            }}\r\n          />\r\n        </Box>\r\n      </Container>\r\n    </Box>\r\n  </>\r\n);\r\n\r\nexport default NotFound;\r\n","import { useNavigate } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  TextField,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nconst Register = () => {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Register | 生産管理 </title>\r\n      </Helmet>\r\n      <Box\r\n        sx={{\r\n          backgroundColor: 'background.default',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          height: '100%',\r\n          justifyContent: 'center'\r\n        }}\r\n      >\r\n        <Container maxWidth=\"sm\">\r\n          <Formik\r\n            initialValues={{\r\n              employee: '',\r\n              email: '',\r\n              userName: '',\r\n              userNameShort: '',\r\n              password: '',\r\n              passwordConfirmation: '',\r\n              policy: false\r\n            }}\r\n            validationSchema={\r\n              Yup.object().shape({\r\n                email: Yup.string().email('正しいメールアドレスを入力してください').max(255).required('メールアドレスを入力してください'),\r\n                employee: Yup.string().max(255).required('社員番号を入力して下さい'),\r\n                userName: Yup.string().max(255).required('フルネームで入力して下いさい'),\r\n                userNameShort: Yup.string().max(255).required('短縮名で入力して下さい'),\r\n                password: Yup.string().max(255).required('パスワードを入力して下さい'),\r\n                passwordConfirmation: Yup.string().oneOf([Yup.ref('password')], 'パスワードが一致しません').required('確認用パスワードを入力してください'),\r\n              })\r\n            }\r\n            onSubmit={() => {\r\n              navigate('/app/dashboard', { replace: true });\r\n            }}\r\n          >\r\n            {({\r\n              errors,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              isSubmitting,\r\n              touched,\r\n              values\r\n            }) => (\r\n              <form onSubmit={handleSubmit}>\r\n                <Box sx={{ mb: 3 }}>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    variant=\"h2\"\r\n                  >\r\n                    Register\r\n                  </Typography>\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    gutterBottom\r\n                    variant=\"body2\"\r\n                  >\r\n                    メールを使用して新しいアカウントを登録します<br />\r\n                    登録後、メールを確認しリンクよりアクセスして下さい\r\n                  </Typography>\r\n                </Box>\r\n                <TextField\r\n                  error={Boolean(touched.employee && errors.employee)}\r\n                  fullWidth\r\n                  helperText={touched.employee && errors.employee}\r\n                  label=\"社員番号\"\r\n                  margin=\"normal\"\r\n                  name=\"employee\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.employee}\r\n                  variant=\"outlined\"\r\n                />\r\n\r\n                <TextField\r\n                  error={Boolean(touched.userName && errors.userName)}\r\n                  fullWidth\r\n                  helperText={touched.userName && errors.userName}\r\n                  label=\"名前\"\r\n                  margin=\"normal\"\r\n                  name=\"userName\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.userName}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.userNameShort && errors.userNameShort)}\r\n                  fullWidth\r\n                  helperText={touched.userNameShort && errors.userNameShort}\r\n                  label=\"短縮名\"\r\n                  margin=\"normal\"\r\n                  name=\"userNameShort\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.userNameShort}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.email && errors.email)}\r\n                  fullWidth\r\n                  helperText={touched.email && errors.email}\r\n                  label=\"メールアドレス\"\r\n                  margin=\"normal\"\r\n                  name=\"email\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.password && errors.password)}\r\n                  fullWidth\r\n                  helperText={touched.password && errors.password}\r\n                  label=\"パスワード\"\r\n                  margin=\"normal\"\r\n                  name=\"password\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.passwordConfirmation && errors.passwordConfirmation)}\r\n                  fullWidth\r\n                  helperText={touched.passwordConfirmation && errors.passwordConfirmation}\r\n                  label=\"パスワード確認\"\r\n                  margin=\"normal\"\r\n                  name=\"passwordConfirmation\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={values.passwordConfirmation}\r\n                  variant=\"outlined\"\r\n                />\r\n                <Box sx={{ py: 2 }}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    disabled={isSubmitting}\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                  >\r\n                    アカウント登録\r\n                  </Button>\r\n                </Box>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","export const ADD_EVENT_LOG = 'ADD_EVENT_LOG'\r\nexport const DELETE_ADDITIONAL_ORDER = 'DELETE_ADDITIONAL_ORDER'\r\n\r\n\r\nexport const ADDITIONAL_ORDER_FETCH = 'ADDITIONAL_ORDER_FETCH'\r\n\r\n// 荷札出力済\r\nexport const PRINT_TAG_DONE = 'PRINT_TAG_DONE'\r\n// 送り状出力済\r\nexport const PRINT_INVOICE_DONE = 'PRINT_INVOICE_DONE'\r\n// 明細表出力済\r\nexport const PRINT_DETAIL_DONE = 'PRINT_DETAIL_DONE'\r\n\r\nexport const PRINT_INVOICE_CSV = 'PRINT_INVOICE_CSV'\r\n\r\n\r\n//\r\n//  各ラベルの操作\r\n//\r\nexport const LABEL_LOADING = 'LABEL_LOADING'\r\nexport const LABEL_DELETE = 'LABEL_DELETE'\r\n\r\n//\r\n//  ターゲットラベル\r\nexport const CHOICE_CID = 'CHOICE_CID'\r\n\r\n\r\n\r\n// ファイルアップロード\r\nexport const UPDATE_FILE = 'UPDATE_FILE'","import { createContext } from 'react'\r\n\r\nconst AppContext = createContext()\r\n\r\nexport default AppContext\r\n","export const wareki = (dt) => {\r\n\r\n    return '2021-01-01'\r\n}\r\n\r\nexport const tagColor = color_number => {\r\n    let back_color\r\n    switch (color_number) {\r\n        case \"0\": back_color = \"glay\"; break\r\n        case \"1\": back_color = \"green\"; break\r\n        case \"2\": back_color = \"red\"; break\r\n        case \"3\": back_color = \"blue\"; break\r\n        default: back_color = \"glay\";\r\n    }\r\n    return back_color\r\n}\r\n\r\nexport const dateYMD = date => {\r\n    const dt = new Date(date)\r\n    return dt.getFullYear() + '/' + (dt.getMonth() + 1) + '/' + dt.getDate()\r\n}","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport QRCode from 'qrcode.react'\r\nimport { tagColor } from '../../../utils/common'\r\nimport './print.css'\r\n\r\nclass Previews extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            tagInfo: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(`http://sv8/api/additional/getLabelsInfo/${this.props.cid}/${this.props.order}/${this.props.cate}`)\r\n            .then(response => {\r\n                // console.log(response.data + ' Did ')\r\n                this.setState({ tagInfo: response.data })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div ref={this.props.ref}>\r\n                {this.state.tagInfo.map((val) => {\r\n                    this.partNo = '000' + val.parts_no\r\n                    this.qrcode = '01' + val.cid + this.partNo.slice(this.partNo.length - 3, this.partNo.length)\r\n\r\n                    // ラベル色\r\n                    this.divStyle = {\r\n                        backgroundColor: tagColor(val.color_number)\r\n                    }\r\n                    return (\r\n                        <div>\r\n                            <div className=\"wrapper\">\r\n                                <div className=\"pageWrapper\">\r\n\r\n                                    <div className=\"makerName\">\r\n                                        <div>{val.cust_name}御中</div>\r\n                                    </div>\r\n                                    <div className=\"dueDate\">\r\n                                        <div>{val.dod}</div>\r\n                                        <div className=\"orderNo\">{val.order_cd}</div>\r\n                                    </div>\r\n\r\n                                    <div className=\"teiName\">\r\n                                        <div>{val.tei_name}様</div>\r\n                                    </div>\r\n\r\n                                    <div className=\"productName\">\r\n                                        <div>{val.product_name}</div>\r\n                                    </div>\r\n                                    <div className=\"qty\">\r\n                                        <div className=\"qtySize\">{val.qty}</div>\r\n                                        <div className=\"qtyTotalSize\">({val.qty}/{val.total_qty})</div>\r\n                                    </div>\r\n                                    <div className=\"address\">\r\n                                        <div>{val.address}</div>\r\n                                    </div>\r\n\r\n                                    <div className=\"labelHeader\">\r\n                                        <div className=\"labelTag\">\r\n                                            <div style={this.divStyle} className=\"labelNumber\">{val.tag_number}</div>\r\n                                        </div>\r\n                                        <div className=\"labelQr\">\r\n                                            <QRCode className=\"qr\" value={this.qrcode} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Previews\r\n","export const ibaInvoice = {\r\n    srcTelNo: '0297-27-1611',\r\n    srcPostNo: '303-0046',\r\n    srcAddress: '茨城県常総市内守谷町きぬの里1-3-3',\r\n    srcName: 'メークス株式会社',\r\n    srcComment: '★持ち帰り不可\\n★不在時TELお願いします'\r\n}\r\n\r\nexport const headers = [\r\n    { label: \"お客様管理番号\", key: \"orderNo\" },\r\n    { label: \"送り状種類\", key: \"invoiceCate\" },\r\n    { label: \"クール区分\", key: \"coolCate\" },\r\n    { label: \"伝票番号\", key: \"\" },\r\n    { label: \"出荷予定日\", key: \"shipDate\" },\r\n    { label: \"お届け予定日\", key: \"dueDate\" },\r\n    { label: \"配達時間帯\", key: \"timeZone\" },\r\n    { label: \"お届け先コード\", key: \"\" },\r\n    { label: \"お届け先電話番号\", key: \"distTelNo\" },\r\n    { label: \"お届け先電話番号枝番\", key: \"\" },\r\n    { label: \"お届け先郵便番号\", key: \"distPostNo\" },\r\n    { label: \"お届け先住所都道府県-市区町村\", key: \"distAddress\" },\r\n    { label: \"お届け先アパートマンション名\", key: \"\" },\r\n    { label: \"お届け先会社・部門１\", key: \"\" },\r\n    { label: \"お届け先会社・部門2\", key: \"\" },\r\n    { label: \"お届け先名\", key: \"distName\" },\r\n    { label: \"お届け先名(ｶﾅ)\", key: \"\" },\r\n    { label: \"敬称\", key: \"distKeisyou\" },\r\n    { label: \"ご依頼主コード\", key: \"\" },\r\n    { label: \"ご依頼主電話番号\", key: \"srcTelNo\" },\r\n    { label: \"ご依頼主電話番号枝番\", key: \"\" },\r\n    { label: \"ご依頼主郵便番号\", key: \"srcPostNo\" },\r\n    { label: \"ご依頼主住所\", key: \"srcAddress\" },\r\n    { label: \"ご依頼主アパートマンション\", key: \"\" },\r\n    { label: \"ご依頼主名\", key: \"srcName\" },\r\n    { label: \"ご依頼主名(ｶﾅ)\", key: \"\" },\r\n    { label: \"品名コード１\", key: \"\" },\r\n    { label: \"品名１\", key: \"srcHinName\" },\r\n    { label: \"品名コード２\", key: \"\" },\r\n    { label: \"品名２\", key: \"\" },\r\n    { label: \"荷扱い１\", key: \"\" },\r\n    { label: \"荷扱い２\", key: \"\" },\r\n    { label: \"記事\", key: \"comment\" },\r\n    { label: \"ｺﾚｸﾄ代金引換額\", key: \"\" },\r\n    { label: \"内消費税額等\", key: \"\" },\r\n    { label: \"止置き\", key: \"\" },\r\n    { label: \"営業所コード\", key: \"\" },\r\n    { label: \"発行枚数\", key: \"\" },\r\n    { label: \"個数口表示フラグ\", key: \"\" },\r\n    { label: \"請求先顧客コード\", key: \"custCode\" },\r\n    { label: \"請求先分類コード\", key: \"\" },\r\n    { label: \"運賃管理番号\", key: \"unchinCode\" },\r\n    { label: \"クロネコwebコレクトデータ登録\", key: \"\" },\r\n    { label: \"クロネコwebコレクト加盟店番号\", key: \"\" },\r\n    { label: \"クロネコwebコレクト申込受付番号１\", key: \"\" },\r\n    { label: \"クロネコwebコレクト申込受付番号２\", key: \"\" },\r\n    { label: \"クロネコwebコレクト申込受付番号３\", key: \"\" },\r\n    { label: \"お届け予定ｅメール利用区分\", key: \"\" },\r\n    { label: \"お届け予定ｅメールe-mailアドレス\", key: \"\" },\r\n    { label: \"入力機種\", key: \"\" },\r\n    { label: \"お届け予定ｅメールメッセージ\", key: \"\" },\r\n    { label: \"お届け完了ｅメール利用区分\", key: \"\" },\r\n    { label: \"お届け完了ｅメールe-mailアドレス\", key: \"\" },\r\n    { label: \"お届け完了ｅメールメッセージ\", key: \"\" },\r\n    { label: \"クロネコ収納代行利用区分\", key: \"\" },\r\n    { label: \"予備\", key: \"\" },\r\n    { label: \"収納代行請求金額\", key: \"\" },\r\n    { label: \"収納代行内消費税額等\", key: \"\" },\r\n    { label: \"収納代行請求先郵便番号\", key: \"\" },\r\n    { label: \"収納代行請求先住所\", key: \"\" },\r\n    { label: \"収納代行請求先住所（アパートマンション名）\", key: \"\" },\r\n    { label: \"収納代行請求先会社・部門名１\", key: \"\" },\r\n    { label: \"収納代行請求先会社・部門名２\", key: \"\" },\r\n    { label: \"収納代行請求先名\", key: \"\" },\r\n    { label: \"収納代行請求先名(カナ)\", key: \"\" },\r\n    { label: \"収納代行問合せ先名(漢字)\", key: \"\" },\r\n    { label: \"収納代行問合せ先郵便番号\", key: \"\" },\r\n    { label: \"収納代行問合せ先住所\", key: \"\" },\r\n    { label: \"収納代行問合せ先住所（アパートマンション名）\", key: \"\" },\r\n    { label: \"収納代行問合せ先電話番号\", key: \"\" },\r\n    { label: \"収納代行管理番号\", key: \"\" },\r\n    { label: \"収納代行品名\", key: \"\" },\r\n    { label: \"収納代行備考\", key: \"\" },\r\n    { label: \"複数口くくりキー\", key: \"\" },\r\n    { label: \"検索キータイトル1\", key: \"\" },\r\n    { label: \"検索キー1\", key: \"\" },\r\n    { label: \"検索キータイトル2\", key: \"\" },\r\n    { label: \"検索キー2\", key: \"\" },\r\n    { label: \"検索キータイトル3\", key: \"\" },\r\n    { label: \"検索キー3\", key: \"\" },\r\n    { label: \"検索キータイトル4\", key: \"\" },\r\n    { label: \"検索キー4\", key: \"\" },\r\n    { label: \"検索キータイトル5\", key: \"\" },\r\n    { label: \"検索キー5\", key: \"\" },\r\n    { label: \"予備２\", key: \"\" },\r\n    { label: \"予備３\", key: \"\" },\r\n    { label: \"投函予定メール利用区分\", key: \"\" },\r\n    { label: \"投函予定メールe-mailアドレス\", key: \"\" },\r\n    { label: \"投函予定メールメッセージ\", key: \"\" },\r\n    { label: \"投函完了メール（お届け先宛）利用区分\", key: \"\" },\r\n    { label: \"投函完了メール（お届け先宛）e-mailアドレス\", key: \"\" },\r\n    { label: \"投函完了メール（お届け先宛）メールメッセージ\", key: \"\" },\r\n    { label: \"投函完了メール（ご依頼主宛）利用区分\", key: \"\" },\r\n    { label: \"投函完了メール（ご依頼主宛）e-mailアドレス\", key: \"\" },\r\n    { label: \"投函完了メール（ご依頼主宛）メールメッセージ\", key: \"\" }\r\n]","import React, { useContext, useState } from 'react'\r\nimport { CSVLink } from 'react-csv';\r\nimport AppContext from '../../../contexts/AppContext'\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Divider from '@material-ui/core/Divider'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button'\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport ja from \"date-fns/locale/ja\"\r\nimport { headers, ibaInvoice } from '../../../data/invoice_data'\r\nimport { dateYMD } from '../../../utils/common'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n    formControl: {\r\n        // backgroundColor: 'red',\r\n        minWidth: 200,\r\n        width: 260,\r\n    },\r\n    selected: {\r\n        marginTop: 8,\r\n        marginLeft: 10,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    comment: {\r\n        width: '25ch',\r\n    }\r\n}));\r\n\r\nconst InvoiceCSV = ({ src }) => {\r\n    const classes = useStyles()\r\n    // const { state } = useContext(AppContext)\r\n    // const src = state.additionalData[0]\r\n\r\n    const [manageNo, setManageNo] = useState(src.order_no)\r\n    const [selectedDate, setSelectedDate] = useState(dateYMD(Date()))\r\n    const [selectedDueDate, setSelectedDueDate] = useState(src.due_date);\r\n    const [timeZoneCateStatus, setTimeZoneCateStatus] = useState('')\r\n    const [distPostNo, setDistPostNo] = useState('')\r\n    const [distPrefectures, setDistPrefectures] = useState(src.prefectures)\r\n    const [distPlace, setDistPlace] = useState(src.place)\r\n    const [distPlace2, setDistPlace2] = useState('')\r\n    const [distName, setDistName] = useState(src.dist_name)\r\n    const [distTelNo, setDistTelNo] = useState(src.dist_tel_no)\r\n    const [hinName, setHinName] = useState(src.cate_name)\r\n    const [srcTelNo, setSrcTelNo] = useState(ibaInvoice.srcTelNo)\r\n    const [srcPostNo, setSrcPostNo] = useState(ibaInvoice.srcPostNo)\r\n    const [srcAddress, setSrcAddress] = useState(ibaInvoice.srcAddress)\r\n    const [srcName, setSrcName] = useState(ibaInvoice.srcName)\r\n    const [comment, setComment] = useState(ibaInvoice.srcComment)\r\n\r\n    const [isSubmit, setIsSubmit] = useState(false)\r\n\r\n    const [dat, setDat] = useState([])\r\n\r\n    // const submitRef = useRef()\r\n\r\n    let timeZoneCate = [\r\n        { code: ' ', name: \"指定なし\" },\r\n        { code: '0812', name: \"午前中\" },\r\n        { code: '1416', name: \"14～16時\" },\r\n        { code: '1618', name: \"16～18時\" },\r\n        { code: '1820', name: \"18～20時\" },\r\n        { code: '1921', name: \"19～21時\" }\r\n    ]\r\n    const handleDateChange = (date) => {\r\n        setSelectedDate(dateYMD(date))\r\n        console.log(selectedDate)\r\n    };\r\n\r\n    const handleDueDateChange = (date) => {\r\n        setSelectedDueDate(dateYMD(date))\r\n        console.log(selectedDueDate)\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        setDat([\r\n            {\r\n                orderNo: manageNo,\r\n                invoiceCate: \"0\",\r\n                coolCate: \"0\",\r\n                shipDate: selectedDate,\r\n                dueDate: selectedDueDate,\r\n                timeZone: timeZoneCateStatus,\r\n                distTelNo: distTelNo,\r\n                distPostNo: distPostNo,\r\n                distAddress: distPrefectures + distPlace + distPlace2,\r\n                distName: distName,\r\n                distKeisyou: \"様\",\r\n                srcTelNo: srcTelNo,\r\n                srcPostNo: srcPostNo,\r\n                srcAddress: srcAddress,\r\n                srcName: srcName,\r\n                srcHinName: hinName,\r\n                custCode: \"029727161101\",\r\n                unchinCode: \"01\",\r\n                comment: comment,\r\n            }\r\n        ])\r\n        console.log(dat)\r\n        setIsSubmit(!isSubmit)\r\n        // isSubmit && \r\n        // setTimeout(\r\n        //     submitRef.current.link.click(), 1000\r\n        // )\r\n        e.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <main>\r\n                <form className={classes.root} noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n                    <div style={{ padding: 20 }}>\r\n                        <Grid container spacing={3}>\r\n                            <Grid container item xs={12} spacing={1}>\r\n                                <TextField required label=\"お客様管理番号(受注番号など)\" defaultValue={manageNo} onChange={setManageNo} />\r\n                                <MuiPickersUtilsProvider utils={DateFnsUtils} locale={ja}>\r\n                                    <KeyboardDatePicker\r\n                                        disableToolbar\r\n                                        variant=\"inline\"\r\n                                        format=\"yyyy/MM/dd\"\r\n                                        margin=\"normal\"\r\n                                        id=\"date-picker-inline\"\r\n                                        label=\"出荷予定日\"\r\n                                        value={selectedDate}\r\n                                        minDate={new Date()}\r\n                                        onChange={date => handleDateChange(date)}\r\n                                        KeyboardButtonProps={{\r\n                                            'aria-label': 'change date',\r\n                                        }}\r\n                                    />\r\n                                </MuiPickersUtilsProvider>\r\n\r\n                                <MuiPickersUtilsProvider utils={DateFnsUtils} locale={ja}>\r\n                                    <KeyboardDatePicker\r\n                                        disableToolbar\r\n                                        variant=\"inline\"\r\n                                        format=\"yyyy/MM/dd\"\r\n                                        margin=\"normal\"\r\n                                        id=\"date-picker-inline\"\r\n                                        label=\"お届け予定日\"\r\n                                        value={selectedDueDate}\r\n                                        onChange={date => handleDueDateChange(date)}\r\n                                        minDate={new Date()}\r\n                                        KeyboardButtonProps={{\r\n                                            'aria-label': 'change date',\r\n                                        }}\r\n                                    />\r\n                                </MuiPickersUtilsProvider>\r\n\r\n\r\n                                {/* <InputLabel variant=\"standard\" htmlFor=\"timeZoneCate\">\r\n                                    配達時間帯\r\n                                </InputLabel>\r\n                                <NativeSelect\r\n                                    defaultValue={timeZoneCateStatus}\r\n                                    onChange={(e) => setTimeZoneCateStatus(e.target.value)}\r\n                                    inputProps={{\r\n                                        name: 'timeZoneCate',\r\n                                        id: 'timeZoneCate',\r\n                                    }}\r\n                                >\r\n                                    {timeZoneCate.map((n) =>\r\n                                        <option value={n.code}>\r\n                                            {n.name}\r\n                                        </option>\r\n                                    )\r\n                                    }\r\n                                </NativeSelect> */}\r\n\r\n                                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                                    <InputLabel id=\"simple-select-outlined-label\" className={classes.selected}>配達時間帯</InputLabel>\r\n                                    <Select className={classes.selected}\r\n                                        labelId=\"simple-select-outlined-label\"\r\n                                        id=\"simple-select-outlined\"\r\n                                        defaultValue={timeZoneCateStatus}\r\n                                        onChange={(e) => setTimeZoneCateStatus(e.target.value)}\r\n                                        label=\"配達時間帯\"\r\n                                    >\r\n                                        {timeZoneCate.map((n) =>\r\n                                            <MenuItem value={n.code}>\r\n                                                {n.name}\r\n                                            </MenuItem>\r\n                                        )}\r\n                                    </Select>\r\n                                </FormControl>\r\n\r\n                            </Grid>\r\n                            <Divider />\r\n                            <Grid container item xs={12} spacing={1}>\r\n                                <TextField required label=\"お届け先郵便番号\" defaultValue={distPostNo} onChange={(e) => setDistPostNo(e.target.value)} />\r\n                                <TextField required label=\"お届け先住所(都道府県)\" defaultValue={distPrefectures} onChange={(e) => setDistPrefectures(e.target.value)} />\r\n                                <TextField required label=\"お届け先住所(市区町村)\" defaultValue={distPlace} onChange={(e) => setDistPlace(e.target.value)} />\r\n                                <TextField required label=\"お届け先住所(番地、その他)\" defaultValue={distPlace2} onChange={(e) => setDistPlace2(e.target.value)} />\r\n                            </Grid>\r\n                            <Grid container item xs={12} spacing={1}>\r\n                                <TextField required label={'お届け先(' + src.orderer + ')'} defaultValue={distName} onChange={(e) => setDistName(e.target.value)} />\r\n                                <TextField required label={'お届け先電話番号(' + src.orderer + ')'} defaultValue={distTelNo} onChange={(e) => setDistTelNo(e.target.value)} />\r\n                            </Grid>\r\n                            <Grid container item xs={12} spacing={1}>\r\n                                <TextField required label=\"ご依頼主電話番号\" defaultValue={srcTelNo} onChange={(e) => setSrcTelNo(e.target.value)} />\r\n                                <TextField required label=\"ご依頼主郵便番号\" defaultValue={srcPostNo} onChange={(e) => setSrcPostNo(e.target.value)} />\r\n                                <TextField required label=\"ご依頼主住所\" defaultValue={srcAddress} onChange={(e) => setSrcAddress(e.target.value)} />\r\n                                <TextField required label=\"ご依頼主名\" defaultValue={srcName} onChange={(e) => setSrcName(e.target.value)} />\r\n                            </Grid>\r\n                            <Grid container item xs={12} spacing={1}>\r\n                                <TextField required label=\"品名１\" defaultValue={hinName} onChange={(e) => setHinName(e.target.value)} />\r\n                                <TextField fullWidth\r\n                                    id=\"outlined-multiline-static\"\r\n                                    label=\"記事\"\r\n                                    multiline\r\n                                    rows={2}\r\n                                    cols={100}\r\n                                    defaultValue={comment}\r\n                                    onChange={e => setComment(e.target.value)}\r\n                                    variant=\"outlined\"\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\" size=\"large\">CSV作成</Button>\r\n                        {isSubmit && <CSVLink data={dat} headers={headers} filename={manageNo + \".csv\"}> Download </CSVLink>}\r\n                    </div>\r\n                </form>\r\n            </main >\r\n        </>\r\n    )\r\n}\r\nexport default InvoiceCSV\r\n","import React, { useContext, forwardRef, useRef, useState } from \"react\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  Avatar,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Slide,\r\n  Button\r\n} from '@material-ui/core';\r\nimport { deepOrange } from '@material-ui/core/colors';\r\n\r\nimport axios from 'axios'\r\nimport {\r\n  ADD_EVENT_LOG,\r\n  DELETE_ADDITIONAL_ORDER,\r\n  PRINT_TAG_DONE,\r\n  CHOICE_CID,\r\n  PRINT_INVOICE_CSV\r\n} from '../../actions'\r\n\r\nimport AppContext from '../../contexts/AppContext'\r\n\r\n// import { Link as RouterLink, Route } from 'react-router-dom'\r\n\r\nimport './main.css'\r\nimport { tagColor } from '../../utils/common'\r\nimport Previews from './prints/Previews'\r\n// import TagLabels from '../../pages/TagLabels'\r\n// import { CenterFocusStrong } from \"@material-ui/icons\";\r\n\r\nimport InvoiceCSV from './invoice/InvoiceCSV'\r\n\r\n// import UploadFiles from './upload/UploadFiles'\r\nimport Component from './upload/react-pdf'\r\n\r\n// React forwardRef\r\nconst Transition = forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"down\" ref={ref} {...props} />;\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  ava: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  square: {\r\n    color: theme.palette.getContrastText(deepOrange[500]),\r\n    width: theme.spacing(7),\r\n    height: theme.spacing(7),\r\n  },\r\n  rounded: {\r\n    color: '#fff',\r\n  }\r\n}))\r\n\r\nconst AdditionalList = ({ src }) => {\r\n  const componentRef = useRef();\r\n  const { dispatch } = useContext(AppContext)\r\n  const id = src.id\r\n  // const cid = src.cid\r\n  // const order_no = src.order_no\r\n  // const tei_name = src.tei_name\r\n\r\n  const classes = useStyles()\r\n\r\n  let imgFile\r\n\r\n  // const tagPrintButton = e => {\r\n  //   dispatch({\r\n  //     type: ADD_EVENT_LOG,\r\n  //     tei_name: `${tei_name}様邸の荷札印刷完了しました。`,\r\n  //     operatedAt: '2021-05-05'\r\n  //   })\r\n  //   dispatch({\r\n  //     type: PRINT_TAG_DONE,\r\n  //     tag_print_done: true,\r\n  //     id,\r\n  //   })\r\n  //   console.log('荷札')\r\n  // }\r\n\r\n\r\n  // const invoicePrintButton = e => {\r\n  //   dispatch({\r\n  //     type: PRINT_INVOICE_CSV,\r\n  //     tag_print_done: true,\r\n  //     id,\r\n  //   })\r\n  //   console.log('送状')\r\n  // }\r\n\r\n  // Accept process\r\n  const acceptButton = d => {\r\n    axios.post('http://localhost:8000/api/tagInformations/', {\r\n      \"order_no\": d.order_no,\r\n      \"cid\": d.cid,\r\n      \"category\": d.cate,\r\n      \"accepted_at\": \"2021-06-15T18:07:00+09:00\",\r\n      \"accepted_user\": 1,\r\n      \"printed_at\": \"2021-06-16T18:07:00+09:00\",\r\n      \"printed_user\": 1,\r\n      \"printed_cnt\": 1,\r\n      \"invoiced_at\": \"2021-06-15T18:07:00+09:00\",\r\n      \"invoiced_user\": 1\r\n    })\r\n      .then(response => { console.log(\"body:\", response.data) })\r\n  }\r\n\r\n  // Accept Data Delete Process\r\n  const deleteButton = val => {\r\n    axios.delete('http://localhost:8000/api/tagInformations/3/', {\r\n      param: { \"order_no\": val.order_no }\r\n    })\r\n      .then(res => { console.log(res.data) })\r\n  }\r\n\r\n  // Accept Data Update Process\r\n  const updateButton = val => {\r\n    axios.put('http://localhost:8000/api/tagInformations/3', {\r\n      param: { \"order_no\": val.order_no }\r\n    })\r\n      .then(res => { console.log(res.data) })\r\n  }\r\n\r\n  const divStyle = {\r\n    backgroundColor: tagColor(src.color_number),\r\n  }\r\n\r\n  const cate = src.cate === \"1\" ? \"鉄筋\" : \"部材\"\r\n  const is_iron = src.cate === \"1\" ? true : false\r\n  const is_invoice = src.vehicle_type === \"宅配便\" ? true : false\r\n  // const is_urgent = src.time_designation === \"至急\" ? true : false\r\n  const is_urgent = src.deadline === \"至急\" ? true : false\r\n\r\n  if (src.vehicle_type === \"宅配便\") {\r\n    imgFile = \"/static/images/deliveryVehicle/yamato.jpeg\"\r\n  } else if (src.vehicle_type === \"赤帽\") {\r\n    imgFile = \"/static/images/deliveryVehicle/akabou.jpg\"\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className={'additionalInfoWrapper ' + (is_iron ? 'iron' : 'buzai') + ' ' + (is_urgent ? 'backgroundFlush red' : '')}>\r\n      <div className=\"additioalInfoHeader\">\r\n        <div className={'tagCnt ' + (is_iron ? 'tagCntIron' : 'tagCntBuzai')}>{src.cate_number_of_outputs}</div>\r\n        <div style={divStyle} className={'tagNumber'}>\r\n          {src.tag_number}\r\n        </div>\r\n        <div className='add__teiName'>\r\n          {src.tei_name}\r\n        </div>\r\n      </div>\r\n      <div className={'additonalInfoTableWrapp'}>\r\n        <table className={'additonalInfoTable'}>\r\n          <tbody>\r\n            <tr>\r\n              <td className='add__dueDate'>\r\n                {src.due_date}\r\n              </td>\r\n              <td>\r\n                <button onClick={() => acceptButton(src)}> 受付</button>\r\n                <button onClick={() => deleteButton(src)}> 取消</button>\r\n                <button onClick={() => updateButton(src)}> 更新</button>\r\n              </td>\r\n              <td rowSpan='2' className='add__vehicleImage'>\r\n                <Avatar className={classes.square} src={imgFile} >\r\n                  {src.vehicle_type}\r\n                </Avatar>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>{cate} </td>\r\n              <td> {src.order_no}</td>\r\n            </tr>\r\n            <tr>\r\n              <td colSpan='3'>\r\n                {src.custname}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>\r\n                {src.place}\r\n                {src.time_designation}\r\n              </td>\r\n              <td colSpan='2'>\r\n                {src.deadline}\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div className=\"operButtonWrapp\">\r\n        <Preview src={src} />\r\n        <ReactToPrint\r\n          trigger={() => (\r\n            <Button size=\"small\" variant=\"outlined\" color=\"primary\">\r\n              印刷\r\n            </Button>\r\n          )}\r\n          content={() => componentRef.current}\r\n        />\r\n        <div style={{ display: \"none\" }}>\r\n          <Previews ref={componentRef} cid={src.cid} order={src.order_no} cate={src.cate} />\r\n        </div>\r\n        {is_invoice && <Invoice src={src} />}\r\n        <Done src={src} />\r\n\r\n        {/* <button onClick={e => tagPrintButton()}>荷札</button> */}\r\n\r\n\r\n        {/* <input type='file' onChange={(e) => handleChangeFile(e)} /> */}\r\n        {/* <button onClick={() => uploadFile(dispatch, file)}>明細</button> */}\r\n\r\n        {/* <button>\r\n          <RouterLink to='/tags'>荷札</RouterLink>\r\n        </button> */}\r\n\r\n\r\n        <div>\r\n          {/* <UploadFiles /> */}\r\n          {/* <Component /> */}\r\n        </div>\r\n\r\n        {/* <Route path='/tags'>\r\n          <TagLabels src={src} />\r\n        </Route> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n//\r\n// 送状入力\r\n//\r\nconst Invoice = props => {\r\n  const [open, setOpen] = useState(false)\r\n  const { src } = props\r\n\r\n  const dialogOpen = () => {\r\n    setOpen(true)\r\n  }\r\n\r\n  const dialogClose = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  const divStyle = {\r\n    backgroundColor: tagColor(src.color_number),\r\n  }\r\n  const divStyle2 = {\r\n    backgroundColor: \"yellow\",\r\n    dispaly: 'inlineBlock',\r\n    flexDirection: 'row'\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={dialogOpen} size=\"small\" variant=\"contained\" color=\"primary\">\r\n        送状\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={dialogClose}\r\n        fullWidth=\"true\"\r\n        maxWidth=\"lg\"\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={dialogClose} style={{ backgroundColor: '#5F9EA0', borderBottom: '1px solid #DADADA' }}>\r\n          <div style={{ display: 'flex' }}>\r\n            <div style={divStyle} className={'tagNumber'}>\r\n              {src.tag_number}\r\n            </div>\r\n            <div style={{ padding: '0 10px', fontSize: '1.5rem', lineHeight: '3rem', alignItems: 'center', color: 'lightyellow' }}>\r\n              {`${src.tei_name}の送状CSVを生成しますか？`}\r\n            </div>\r\n          </div>\r\n        </DialogTitle>\r\n\r\n        <DialogContent dividers style={{ backgroundColor: '#FFF' }}>\r\n          <InvoiceCSV src={src} />\r\n        </DialogContent>\r\n\r\n        <DialogActions style={{ backgroundColor: '#5F9EA0', borderTop: '1px solid #DADADA' }} >\r\n          <Button onClick={dialogClose} variant=\"contained\" color=\"secondary\">\r\n            閉じる\r\n          </Button>\r\n          {/* <Button onClick={dialogClose} variant=\"outlined\" color=\"secondary\">\r\n            CSV生成\r\n          </Button> */}\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\n\r\n//\r\n//  処理完了\r\n//\r\nconst Done = props => {\r\n  const [open, setOpen] = useState(false)\r\n  const { src } = props\r\n\r\n  const dialogOpen = () => {\r\n    setOpen(true)\r\n  }\r\n\r\n  const dialogClose = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={dialogOpen} size=\"small\" variant=\"contained\" color=\"secondary\">\r\n        処理完了\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        onClose={dialogClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">以下の物件を完了しますか？</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            <p>{`${src.tei_name}`}</p>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={dialogClose} color=\"secondary\">\r\n            キャンセル\r\n          </Button>\r\n          <Button onClick={dialogClose} color=\"primary\">\r\n            完了\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\n\r\n//\r\n//  プレビュー\r\n//\r\nconst Preview = props => {\r\n  const componentRef = useRef()\r\n  const [open, setOpen] = useState(false)\r\n  const { src } = props\r\n\r\n  const dialogOpen = () => {\r\n    setOpen(true)\r\n  }\r\n\r\n  const dialogClose = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={dialogOpen} size=\"small\" variant=\"outlined\" color=\"primary\">\r\n        プレビュー\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={dialogClose}\r\n        fullWidth=\"true\"\r\n        maxWidth=\"sm\"\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          {`${src.tei_name}を印刷しますか？`}\r\n        </DialogTitle>\r\n\r\n        <DialogContent>\r\n          <Previews ref={componentRef} cid={src.cid} order={src.order_no} cate={src.cate} />\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button onClick={dialogClose} variant=\"outlined\" color=\"secondary\">\r\n            キャンセル\r\n          </Button>\r\n          <ReactToPrint\r\n            trigger={() => (\r\n              <Button variant=\"outlined\" color=\"primary\">\r\n                印刷\r\n              </Button>\r\n            )}\r\n            content={() => componentRef.current}\r\n          />\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\nexport default AdditionalList\r\n","import React from 'react'\r\nimport { Document, Page } from 'react-pdf';\r\n\r\n// import '@styles/react-pdf.styl'\r\n\r\nexport default class Component extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { page: 1, base64: null, name: null }\r\n    }\r\n\r\n    handleChange(e) {\r\n        const file = e.target.files[0]\r\n        const reader = new FileReader()\r\n        reader.readAsDataURL(file)\r\n        reader.onload = () => {\r\n            this.setState({\r\n                base64: reader.result,\r\n                name: file.name,\r\n            })\r\n        }\r\n    }\r\n\r\n    handleDocumentLoad({ numPages }) {\r\n        this.setState({ numPages })\r\n    }\r\n\r\n    handleButtonClick(page) {\r\n        this.setState({ page })\r\n    }\r\n\r\n    render() {\r\n\r\n        return <div className=\"component\">\r\n            {/* PDFを添付してください: */}\r\n            <input type=\"file\" onChange={this.handleChange.bind(this)} />\r\n            <Document\r\n                file={this.state.base64} style={{ border: 'dotted 1px #aaa' }}\r\n                onLoadSuccess={this.handleDocumentLoad.bind(this)}\r\n            >\r\n                <Page\r\n                    pageNumber={this.state.page}\r\n                    style={{ border: 'solid 2px #000', height: 300 }}\r\n                />\r\n            </Document>\r\n            <div>{this.state.name}</div>\r\n            <button\r\n                disabled={this.state.page <= 0}\r\n                onClick={() => this.handleButtonClick(this.state.page - 1)}\r\n            >Prev</button>\r\n            {this.state.page || 1} / {this.state.numPages || '-'}\r\n            <button\r\n                disabled={this.state.page >= this.state.numPages || !this.state.numPages}\r\n                onClick={() => this.handleButtonClick(this.state.page + 1)}\r\n            >Next</button>\r\n\r\n        </div>\r\n    }\r\n}","import React, { useContext, useEffect } from \"react\";\r\nimport { Helmet } from 'react-helmet';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nimport { ADDITIONAL_ORDER_FETCH } from '../actions'\r\nimport AdditionalList from \"../components/additional/AdditionalList\";\r\nimport AppContext from '../contexts/AppContext'\r\n\r\nconst Additional = () => {\r\n    const { state, dispatch } = useContext(AppContext)\r\n\r\n    const fetch_order = () => {\r\n        axios.get('http://sv8/api/additional/getAdditionalOrder')\r\n            .then(response => {\r\n                console.log(response.data)\r\n                dispatch({ type: ADDITIONAL_ORDER_FETCH, additionalData: response.data })\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch_order()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const intervalId = setInterval(function () {\r\n            fetch_order()\r\n        }, 15000)\r\n        return (() => clearInterval(intervalId))\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>追加依頼サポート | 生産管理 </title>\r\n            </Helmet>\r\n            {/* <header>\r\n                <nav>\r\n                    <div className='header-inner'>追加依頼サポートシステム</div>\r\n                    <RouterLink to=\"/tags\">荷札</RouterLink>\r\n                    <RouterLink to=\"/invoice\">送状</RouterLink>\r\n                </nav>\r\n            </header> */}\r\n            <main>\r\n                <div className={'additionalWrapper '} >\r\n                    {state.additionalData.map((src, idx) => (\r\n                        <AdditionalList key={idx} src={src} />\r\n                    ))}\r\n                </div>\r\n            </main>\r\n        </>\r\n    );\r\n}\r\nexport default Additional","import React, { useContext, useState, useRef } from 'react'\r\nimport { CSVLink } from 'react-csv';\r\nimport AppContext from '../contexts/AppContext'\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport ja from \"date-fns/locale/ja\"\r\nimport { headers } from '../data/invoice_data'\r\nimport { getDay } from 'date-fns';\r\nimport { dateYMD } from '../utils/common'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n}));\r\n\r\nconst Invoice = () => {\r\n    const classes = useStyles()\r\n    const { state } = useContext(AppContext)\r\n\r\n    const src = state.additionalData[0]\r\n\r\n    const [manageNo, setManageNo] = useState(src.order_no)\r\n    const [selectedDate, setSelectedDate] = useState(dateYMD(Date()))\r\n    const [selectedDueDate, setSelectedDueDate] = useState(src.due_date);\r\n    const [timeZoneCateStatus, setTimeZoneCateStatus] = useState('')\r\n    const [distPostNo, setDistPostNo] = useState('')\r\n    const [distPrefectures, setDistPrefectures] = useState(src.prefectures)\r\n    const [distPlace, setDistPlace] = useState(src.place)\r\n    const [distPlace2, setDistPlace2] = useState('')\r\n    const [distName, setDistName] = useState(src.dist_name)\r\n    const [distTelNo, setDistTelNo] = useState(src.dist_tel_no)\r\n    const [srcTelNo, setSrcTelNo] = useState('0297-27-1611')\r\n    const [srcPostNo, setSrcPostNo] = useState('303-0046')\r\n    const [srcAddress, setSrcAddress] = useState('茨城県常総市内守谷町きぬの里1-3-3')\r\n    const [srcName, setSrcName] = useState('潮田 正人')\r\n    const [hinName, setHinName] = useState(src.cate_name)\r\n\r\n    const [isSubmit, setIsSubmit] = useState(false)\r\n\r\n    const [dat, setDat] = useState([])\r\n\r\n    // const submitRef = useRef()\r\n\r\n    let timeZoneCate = [\r\n        { code: '', name: \"指定なし\" },\r\n        { code: '0812', name: \"午前中\" },\r\n        { code: '1416', name: \"14～16時\" },\r\n        { code: '1618', name: \"16～18時\" },\r\n        { code: '1820', name: \"18～20時\" },\r\n        { code: '1921', name: \"19～21時\" },\r\n        { code: '0010', name: \"午前10時まで\" },\r\n        { code: '0017', name: \"午後5時まで\" }\r\n    ]\r\n    const handleDateChange = (date) => {\r\n        setSelectedDate(dateYMD(date))\r\n        console.log(selectedDate)\r\n    };\r\n\r\n    const handleDueDateChange = (date) => {\r\n        setSelectedDueDate(dateYMD(date))\r\n        console.log(selectedDueDate)\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        setDat([\r\n            {\r\n                orderNo: manageNo,\r\n                invoiceCate: \"0\",\r\n                coolCate: \"0\",\r\n                shipDate: selectedDate,\r\n                dueDate: selectedDueDate,\r\n                timeZone: timeZoneCateStatus,\r\n                distTelNo: distTelNo,\r\n                distPostNo: distPostNo,\r\n                distAddress: distPrefectures + distPlace + distPlace2,\r\n                distName: distName,\r\n                distKeisyou: \"様\",\r\n                srcTelNo: srcTelNo,\r\n                srcPostNo: srcPostNo,\r\n                srcAddress: srcAddress,\r\n                srcName: srcName,\r\n                srcHinName: hinName,\r\n                custCode: \"029727161101\",\r\n                unchinCode: \"01\"\r\n            }\r\n        ])\r\n        console.log(dat)\r\n        setIsSubmit(!isSubmit)\r\n        // isSubmit && \r\n        // setTimeout(\r\n        //     submitRef.current.link.click(), 1000\r\n        // )\r\n        e.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {/* <header>\r\n                <nav>\r\n                    <div className='header-inner'>追加依頼サポートシステム</div>\r\n                </nav>\r\n            </header> */}\r\n            <main>\r\n                <form className={classes.root} noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n                    <div style={{ padding: 20 }}>\r\n                        <Grid container spacing={3}>\r\n                            <Grid container item xs={12} spacing={1}>\r\n                                <TextField required label=\"お客様管理番号(受注番号など)\" defaultValue={manageNo} onChange={setManageNo} />\r\n                            </Grid>\r\n                            <Grid container item xs={12} spacing={1}>\r\n                                <MuiPickersUtilsProvider utils={DateFnsUtils} locale={ja}>\r\n                                    <KeyboardDatePicker\r\n                                        disableToolbar\r\n                                        variant=\"inline\"\r\n                                        format=\"yyyy/MM/dd\"\r\n                                        margin=\"normal\"\r\n                                        id=\"date-picker-inline\"\r\n                                        label=\"出荷予定日\"\r\n                                        value={selectedDate}\r\n                                        minDate={new Date()}\r\n                                        onChange={date => handleDateChange(date)}\r\n                                        KeyboardButtonProps={{\r\n                                            'aria-label': 'change date',\r\n                                        }}\r\n                                    />\r\n                                </MuiPickersUtilsProvider>\r\n\r\n                                <MuiPickersUtilsProvider utils={DateFnsUtils} locale={ja}>\r\n                                    <KeyboardDatePicker\r\n                                        disableToolbar\r\n                                        variant=\"inline\"\r\n                                        format=\"yyyy/MM/dd\"\r\n                                        margin=\"normal\"\r\n                                        id=\"date-picker-inline\"\r\n                                        label=\"お届け予定日\"\r\n                                        value={selectedDueDate}\r\n                                        onChange={date => handleDueDateChange(date)}\r\n                                        minDate={new Date()}\r\n                                        KeyboardButtonProps={{\r\n                                            'aria-label': 'change date',\r\n                                        }}\r\n                                    />\r\n                                </MuiPickersUtilsProvider>\r\n\r\n\r\n                                <InputLabel variant=\"standard\" htmlFor=\"timeZoneCate\">\r\n                                    配達時間帯\r\n                                </InputLabel>\r\n                                <NativeSelect\r\n                                    defaultValue={timeZoneCateStatus}\r\n                                    onChange={(e) => setTimeZoneCateStatus(e.target.value)}\r\n                                    inputProps={{\r\n                                        name: 'timeZoneCate',\r\n                                        id: 'timeZoneCate',\r\n                                    }}\r\n                                >\r\n                                    {timeZoneCate.map((n) =>\r\n                                        <option value={n.code}>\r\n                                            {n.name}\r\n                                        </option>\r\n                                    )\r\n                                    }\r\n                                </NativeSelect>\r\n                            </Grid>\r\n                            <Grid container item xs={12} spacing={1}>\r\n                                <TextField required label=\"お届け先郵便番号\" defaultValue={distPostNo} onChange={(e) => setDistPostNo(e.target.value)} />\r\n                                <TextField required label=\"お届け先住所(都道府県)\" defaultValue={distPrefectures} onChange={(e) => setDistPrefectures(e.target.value)} />\r\n                                <TextField required label=\"お届け先住所(市区町村)\" defaultValue={distPlace} onChange={(e) => setDistPlace(e.target.value)} />\r\n                                <TextField required label=\"お届け先住所(番地、その他)\" defaultValue={distPlace2} onChange={(e) => setDistPlace2(e.target.value)} />\r\n                            </Grid>\r\n                            <Grid container item xs={12} spacing={1}>\r\n                                <TextField required label={'お届け先(' + src.orderer + ')'} defaultValue={distName} onChange={(e) => setDistName(e.target.value)} />\r\n                                <TextField required label={'お届け先電話番号(' + src.orderer + ')'} defaultValue={distTelNo} onChange={(e) => setDistTelNo(e.target.value)} />\r\n                            </Grid>\r\n                            <Grid container item xs={12} spacing={1}>\r\n                                <TextField required label=\"ご依頼主電話番号\" defaultValue={srcTelNo} onChange={(e) => setSrcTelNo(e.target.value)} />\r\n                                <TextField required label=\"ご依頼主郵便番号\" defaultValue={srcPostNo} onChange={(e) => setSrcPostNo(e.target.value)} />\r\n                                <TextField required label=\"ご依頼主住所\" defaultValue={srcAddress} onChange={(e) => setSrcAddress(e.target.value)} />\r\n                                <TextField required label=\"ご依頼主名\" defaultValue={srcName} onChange={(e) => setSrcName(e.target.value)} />\r\n                            </Grid>\r\n                            <Grid container item xs={12} spacing={1}>\r\n                                <TextField required label=\"品名１\" defaultValue={hinName} onChange={(e) => setHinName(e.target.value)} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <button type=\"submit\">CSV作成</button>\r\n                        {isSubmit && <CSVLink data={dat} headers={headers} filename={manageNo + \".csv\"}> 生成 </CSVLink>}\r\n                    </div>\r\n                </form>\r\n            </main >\r\n        </React.Fragment >\r\n    )\r\n}\r\nexport default Invoice\r\n","import { Navigate } from 'react-router-dom';\r\nimport DashboardLayout from 'src/components/DashboardLayout';\r\nimport MainLayout from 'src/components/MainLayout';\r\nimport Account from 'src/pages/Account';\r\n// import CustomerList from 'src/pages/CustomerList';\r\nimport Dashboard from 'src/pages/Dashboard';\r\nimport Login from 'src/pages/Login';\r\nimport NotFound from 'src/pages/NotFound';\r\n// import ProductList from 'src/pages/ProductList';\r\nimport Register from 'src/pages/Register';\r\n// import Settings from 'src/pages/Settings';\r\n\r\nimport Additional from 'src/pages/Additional';\r\nimport Invoice from 'src/pages/Invoice';\r\n\r\nconst routes = [\r\n  {\r\n    path: 'app',\r\n    element: <DashboardLayout />,\r\n    children: [\r\n      { path: 'account', element: <Account /> },\r\n      // { path: 'customers', element: <CustomerList /> },\r\n      { path: 'dashboard', element: <Dashboard /> },\r\n      // { path: 'products', element: <ProductList /> },\r\n      // { path: 'settings', element: <Settings /> },\r\n      { path: '*', element: <Navigate to=\"/404\" /> }\r\n    ]\r\n  },\r\n  {\r\n    path: '/',\r\n    element: <MainLayout />,\r\n    children: [\r\n      { path: 'additional', element: <Additional /> },\r\n      { path: 'Invoice', element: <Invoice /> },\r\n      { path: 'login', element: <Login /> },\r\n      { path: 'register', element: <Register /> },\r\n      { path: '404', element: <NotFound /> },\r\n      { path: '/', element: <Navigate to=\"/app/dashboard\" /> },\r\n      { path: '*', element: <Navigate to=\"/404\" /> }\r\n    ]\r\n  }\r\n];\r\n\r\nexport default routes;\r\n","import { ADD_EVENT_LOG } from '../actions'\r\n\r\nconst events = (state = [], action) => {\r\n    switch (action.type) {\r\n        case ADD_EVENT_LOG:\r\n            const eventLog = {\r\n                tei_name: action.tei_name,\r\n                operatedAt: action.operatedAt\r\n            }\r\n            return [eventLog, ...state]\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default events\r\n","/*\r\n    荷札出力済\r\n    PRINT_TAG_DONE\r\n\r\n    送り状出力済\r\n    PRINT_INVOICE_DONE\r\n\r\n    明細表出力済\r\n    PRINT_DETAILS_DONE\r\n*/\r\n\r\n\r\nimport {\r\n    ADDITIONAL_ORDER_FETCH,\r\n    DELETE_ADDITIONAL_ORDER,\r\n    PRINT_TAG_DONE,\r\n    // PRINT_INVOICE_DONE,\r\n    // PRINT_DETAIL_DONE,\r\n    PRINT_INVOICE_CSV\r\n} from '../actions'\r\n\r\nconst additionalData = (state = [], action) => {\r\n    switch (action.type) {\r\n        case ADDITIONAL_ORDER_FETCH:\r\n            return action.additionalData\r\n        case DELETE_ADDITIONAL_ORDER:\r\n            return state.filter(event => event.id !== action.id)\r\n        case PRINT_TAG_DONE:\r\n            return state.filter(event => event.id === action.id)\r\n\r\n        case PRINT_INVOICE_CSV:\r\n            return state.filter(event => event.id === action.id)\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default additionalData\r\n","/*\r\n    荷札出力済\r\n    PRINT_TAG_DONE\r\n\r\n    送り状出力済\r\n    PRINT_INVOICE_DONE\r\n\r\n    明細表出力済\r\n    PRINT_DETAILS_DONE\r\n*/\r\n\r\n\r\nimport {\r\n    LABEL_LOADING,\r\n    LABEL_DELETE,\r\n} from '../actions'\r\n\r\nconst labelData = (state = [], action) => {\r\n    switch (action.type) {\r\n        case LABEL_LOADING:\r\n            return action.labelData\r\n        case LABEL_DELETE:\r\n            return state.filter(event => event.parts_no !== action.src.parts_no)\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default labelData\r\n","\r\nimport { CHOICE_CID } from '../actions'\r\n\r\nconst choiceLabel = (state = [], action) => {\r\n    switch (action.type) {\r\n        case CHOICE_CID:\r\n            return { cid: action.cid, order_no: action.order_no }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default choiceLabel","import { combineReducers } from 'redux'\r\nimport events from './events'\r\nimport additionalData from './additionalData'\r\nimport labelData from './labelData'\r\nimport choiceLabel from './choiceLabel'\r\n\r\nexport default combineReducers({\r\n    events,\r\n    additionalData,\r\n    labelData,\r\n    choiceLabel\r\n})\r\n","import React, { useEffect, useReducer } from 'react';\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport { useRoutes } from 'react-router-dom';\r\nimport { ThemeProvider } from '@material-ui/core';\r\nimport GlobalStyles from 'src/components/GlobalStyles';\r\nimport 'src/mixins/chartjs';\r\nimport theme from 'src/theme';\r\nimport routes from 'src/routes';\r\n\r\nimport AppContext from './contexts/AppContext'\r\nimport reducer from './reducers'\r\n\r\nconst APP_KEY = 'appAdditional'\r\n\r\nconst App = () => {\r\n  const routing = useRoutes(routes);\r\n  const appState = localStorage.getItem(APP_KEY)\r\n  const initialState = appState ? JSON.parse(appState) : {\r\n    targetLabel: [],\r\n    events: [],\r\n    additionalData: [],\r\n    labelData: []\r\n  }\r\n\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(APP_KEY, JSON.stringify(state))\r\n  }, [state])\r\n\r\n  return (\r\n    <AppContext.Provider value={{ state, dispatch }}>\r\n      <ThemeProvider theme={theme}>\r\n        <GlobalStyles />\r\n        {routing}\r\n      </ThemeProvider>\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './App';\r\n\r\nReactDOM.render((\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>\r\n), document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}